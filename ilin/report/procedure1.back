<html>
<HEAD><base target="new">
<TITLE>Wavelength Assignment & routing Algorithm for Optical Networks</TITLE>

</HEAD>
<!BODY bgcolor=f5ccb0 70db93 d9d9f3 TEXT=black LINK=blue VLINK=darkblue>
<BODY bgcolor=d9d9f3 TEXT=black LINK=blue VLINK=darkblue>
<center>

<table border=1>
<tr><th bgcolor=pink><h2>Wavelength Assignment & routing Algorithm for Optical Networks</th>
</tr></table>
<hr>
<h2>Main Procedure:<p>
<img src=./gif/assign33.gif>
</h2>
<hr></center>
<h3>Background:</h3>
<ul><li><b>Objective:</b>
     <ul><li>To satisfy all the demands, assign wavelength and route for each
	deman with minimum cost
     </ul>
    <li><b>Constraint:</b>
    <ul><li>each fiber can at most let 8 wavelenths pass through
        <li>inside each fiber, each assigned wavelength must be different from
	 each other
    </ul>
    <li><b>Given data:</b>
    <ul><li>Demand Matrix D, Network G (topology) <br>
	<ul><li>we can use <a href=../ilin/generators.html>network generator
	    </a> (netgen, gridgen) to do this.
	    But the network generated by them may not be too good for 
	    our use. To do this, we need to specify the followings:
	    <ul><li># nodes, # arcs, max capacity, min capacity, max cost, 
		min cost, max demand, min demand
	        <li>after the above are specified, the network generator will
	 	generate a feasible network. (the demands can always be
		satisified, and the topology is always connected.)
	    </ul>
	    <li>since the network generated by the program is always feasible,
		I may suggest that we do not use this method, instead, we
		may have to choose another topology of network, and some
		reasonable demands. 
	    <li>Surely, it will be the best, if we can be offered a good 
		network sample by MCI.
	</ul>	
    </ul>	
</ul>
<hr><p>
<h3>Initialization Part:</h3>
<ul><li><b>Building Virtual Network:</b>
  <ul><li>assume there are 8 wavelength for each fiber. <br>We duplicate the 
	same topology of network 8 times, each of which represents a network
	whose arc can only be passed by that wavelength.<br>
	thus, we add <font color=red>8n</font> nodes, and <font color=red>8m
	</font> arcs.<br>
	each arc has capacity=1, cost=??(distance? or 1 [# hop]?)
      <li>for each node, we duplicate 2 <i>virtural nodes</i>, one represents
	 source, while the other represents sink.<br>
	thus, we add <font color=red>2n</font> nodes,
      <li>for each <i>virtual node</i>, we create 8 <i>virtual arcs</i> to
	connect it with the corresponding nodes for all the 8 virual networks.
	<br>thus, we add <font color=red>16n</font> arcs.
	each arc has capacity=<img src=./gif/infinity.gif>, cost=0;
      <li>the new topology will contain <font color=red>10n nodes</font>
	 and <font color=red>(8m+16n) arcs</font> in total.
  </ul>
</ul>
<hr><p>
<h3>Main Solving Part:</h3>

<hr><p>
<h3>Truncate Cable Part:</h3>

<hr><p>
<h3>Post-Optimization Part:</h3>

<hr><p>
<h3>Final Tune-Up Part:</h3>


#FIG 3.1
Landscape
Center
Inches
1200 2
6 899 4499 2774 5624
4 0 -1 0 0 0 12 0.0000000 4 165 1545 900 4650 create 8 arcs (8n+1, i)\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 1950 4875 ...\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 1950 5250 ...\001
4 0 -1 0 0 0 12 0.0000000 4 165 915 1800 5550 (8n+1, i+7n)\001
4 0 -1 0 0 0 12 0.0000000 4 165 915 1800 5100 (8n+1, i+4n)\001
-6
6 11025 3600 16275 6900
6 11250 5475 13575 5775
4 0 -1 0 0 0 12 0.0000000 4 90 90 11251 5626 n\001
4 0 -1 0 0 0 12 0.0000000 4 165 615 11701 5701 node_no\001
4 0 -1 0 0 0 12 0.0000000 4 135 705 12826 5701 imbalance\001
-6
6 11251 5851 15976 6601
6 11251 5851 15901 6151
4 0 -1 0 0 0 12 0.0000000 4 90 75 11252 6002 a\001
4 0 -1 0 0 0 12 0.0000000 4 135 210 11702 6077 tail\001
4 0 -1 0 0 0 12 0.0000000 4 135 330 12227 6077 head\001
4 0 -1 0 0 0 12 0.0000000 4 135 975 12977 6077 lowerbouand \001
4 0 -1 0 0 0 12 0.0000000 4 180 855 14327 6077 upperbound\001
4 0 -1 0 0 0 12 0.0000000 4 120 285 15602 6077 cost\001
-6
6 11252 6152 15902 6452
4 0 -1 0 0 0 12 0.0000000 4 90 75 11253 6303 a\001
4 0 -1 0 0 0 12 0.0000000 4 135 210 11703 6378 tail\001
4 0 -1 0 0 0 12 0.0000000 4 135 330 12228 6378 head\001
4 0 -1 0 0 0 12 0.0000000 4 135 975 12978 6378 lowerbouand \001
4 0 -1 0 0 0 12 0.0000000 4 180 855 14328 6378 upperbound\001
4 0 -1 0 0 0 12 0.0000000 4 120 285 15603 6378 cost\001
-6
4 0 -1 0 0 0 12 0.0000000 4 15 135 11252 6527 ...\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 11702 6527 ...\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 12227 6527 ...\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 13127 6527 ...\001
4 0 -1 0 0 0 12 0.0000000 4 15 180 14477 6527 ....\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 15602 6527 ...\001
-6
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 16201 6826 16201 3601 11026 3601 11026 6826 16201 6826
4 0 -1 0 0 0 12 0.0000000 4 135 1860 11476 3901 DIMACS network format\001
4 0 -1 0 0 0 12 0.0000000 4 90 75 11251 4426 c\001
4 0 -1 0 0 0 12 0.0000000 4 90 75 11251 4714 c\001
4 0 -1 0 0 0 12 0.0000000 4 135 765 11776 4501 Comments\001
4 0 -1 0 0 0 12 0.0000000 4 135 765 11776 4801 Comments\001
4 0 -1 0 0 0 12 0.0000000 4 135 90 11251 5176 p\001
4 0 -1 0 0 0 12 0.0000000 4 120 645 11701 5251 comment\001
4 0 -1 0 0 0 12 0.0000000 4 135 510 12826 5251 #nodes\001
4 0 -1 0 0 0 12 0.0000000 4 135 375 13876 5251 #arcs\001
-6
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 1 0 2
	0 0 1.00 60.00 120.00
	 2400 1875 2400 2100
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 3900 1350 3900 825 450 825 450 1350 3900 1350
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 6000 1875 6000 1575 375 1575 375 1875 6000 1875
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 5625 3600 5625 2175 825 2175 825 3600 5625 3600
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 1 0 2
	0 0 1.00 60.00 120.00
	 3900 1125 4125 1125
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 6375 1425 6375 825 4200 825 4200 1425 6375 1425
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 7050 5700 7050 3975 750 3975 750 5700 7050 5700
2 4 2 1 -1 7 0 0 -1 3.000 0 0 7 0 0 5
	 3750 5625 3750 4050 825 4050 825 5625 3750 5625
2 4 2 1 -1 7 0 0 -1 3.000 0 0 7 0 0 5
	 6975 5625 6975 4050 3900 4050 3900 5625 6975 5625
4 0 -1 0 0 0 12 0.0000000 4 165 3225 525 1050 Get Demand Matrix [ source  sink   demand ]\001
4 0 -1 0 0 0 12 0.0000000 4 180 5415 525 1800 Get Physical Network Topology [ tail  head  lowerbound  upperbound cost ]\001
4 0 -1 0 0 0 12 0.0000000 4 180 2070 600 1275 (already in descending order)\001
4 0 -1 0 0 0 12 0.0000000 4 165 1770 975 2400 create 8n nodes: 1, ......,n\001
4 0 -1 0 0 0 12 0.0000000 4 165 795 2175 2625 n+1....,n+n\001
4 0 -1 0 0 0 12 0.0000000 4 15 90 2325 3150 ..\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 2700 3150 ...\001
4 0 -1 0 0 0 12 0.0000000 4 165 930 2175 2913 2n+1,..,2n+n\001
4 0 -1 0 0 0 12 0.0000000 4 165 1320 3675 2400 8m arcs: 1,........,m\001
4 0 -1 0 0 0 12 0.0000000 4 165 1065 4350 2625 m+1,......,m+m\001
4 0 -1 0 0 0 12 0.0000000 4 165 1155 4350 2913 2m+1,....,2m+m\001
4 0 -1 0 0 0 12 0.0000000 4 15 90 4575 3075 ..\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 4950 3075 ...\001
4 0 -1 0 0 0 12 0.0000000 4 165 930 2175 3450 7n+1,..,7n+n\001
4 0 -1 0 0 0 12 0.0000000 4 165 1155 4350 3375 7m+1,....,7m+m\001
4 0 -1 0 0 0 12 0.0000000 4 135 1830 4275 1050 Get 1 demand once a time\001
4 0 -1 0 0 0 12 0.0000000 4 180 1965 4275 1338 say, sorce=i, sink=j, k units\001
4 0 -1 0 0 0 12 0.0000000 4 180 2805 900 4275 create (8n+1)th node corresponding to i\001
4 0 -1 0 0 0 12 0.0000000 4 180 2805 3975 4275 create (8n+2)th node corresponding to j\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 5101 4876 ...\001
4 0 -1 0 0 0 12 0.0000000 4 15 135 5101 5251 ...\001
4 0 -1 0 0 0 12 0.0000000 4 180 1545 4051 4651 create 8 arcs (j, 8n+2)\001
4 0 -1 0 0 0 12 0.0000000 4 180 825 4951 5101 (j+n, 8n+2)\001
4 0 -1 0 0 0 12 0.0000000 4 180 915 4951 5551 (j+7n, 8n+2)\001
4 0 -1 0 0 0 12 0.0000000 4 180 5685 1125 6300 Loops to send out the selected demand. # loops=how many units of that demand\001
4 0 -1 0 0 0 12 0.0000000 4 180 3975 1575 7338 Apply Dijkstra Algorithm to solve a unit of this demand\001
4 0 -1 0 0 0 12 0.0000000 4 180 3390 1575 7626 After this is done, output the assignment data as\001
4 0 -1 0 0 0 12 0.0000000 4 180 4515 1950 8025 demand_index  starting_point  midium points  destination_point\001
4 0 -1 0 0 0 12 0.0000000 4 135 660 6750 8025 into a file\001
#FIG 3.1
Portrait
Center
Inches
1200 2
6 4126 1651 5851 2626
6 4201 1726 5701 2476
4 0 -1 0 0 0 12 0.0000000 4 180 1065 4202 1877 flag ON->ON\001
4 0 -1 0 0 0 12 0.0000000 4 180 765 4202 2165 capacity=1\001
4 0 -1 0 0 0 12 0.0000000 4 135 1455 4202 2453 cost+=that fiber cost\001
-6
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 5777 2552 5777 1652 4127 1652 4127 2552 5777 2552
-6
6 2851 3076 4351 4051
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 4277 3977 4277 3077 2852 3077 2852 3977 4277 3977
4 0 -1 0 0 0 12 0.0000000 4 180 765 3002 3591 capacity=1\001
4 0 -1 0 0 0 12 0.0000000 4 180 1140 3002 3303 flag ON->OFF\001
4 0 -1 0 0 0 12 0.0000000 4 135 585 3002 3879 cost+=0\001
-6
6 3076 4051 4576 5026
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 4502 4952 4502 4052 3077 4052 3077 4952 4502 4952
4 0 -1 0 0 0 12 0.0000000 4 135 585 3227 4854 cost+=0\001
4 0 -1 0 0 0 12 0.0000000 4 180 1215 3227 4278 flag OFF->OFF\001
4 0 -1 0 0 0 12 0.0000000 4 180 780 3227 4566 capacity++\001
-6
6 525 8925 5625 9900
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 0 0 4
	 677 9152 527 9302 527 9677 752 9827
4 0 -1 0 0 0 12 0.0000000 4 180 2940 677 9077 For those arcs not on the assigned PATH\001
4 0 -1 0 0 0 12 0.0000000 4 180 4635 977 9452 NO CHANGE, also, NO CHANGE for their corresponding arcs\001
4 0 -1 0 0 0 12 0.0000000 4 135 2130 977 9740   in all other Virtual Networks\001
-6
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 4127 6527 4127 5627 2477 5627 2477 6527 4127 6527
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 4052 7502 4052 6602 2627 6602 2627 7502 4052 7502
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 0 0 4
	 751 1876 676 1951 676 5101 826 5251
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 0 0 4
	 751 5551 676 5626 675 8250 825 8400
2 1 0 1 -1 7 0 0 -1 0.000 0 0 -1 0 0 4
	 601 1576 451 1726 450 8400 675 8700
2 4 1 1 -1 7 0 0 -1 4.000 0 0 7 0 0 5
	 5401 5101 1051 5101 1051 2776 5401 2776 5401 5101
2 4 0 1 -1 7 0 0 -1 0.000 0 0 7 0 0 5
	 5926 10125 5926 1276 300 1276 300 10125 5926 10125
4 0 -1 0 0 0 12 0.0000000 4 180 5400 225 375 flag-ON: researve for next fiber, we must add fiber if path passes through it\001
4 0 -1 0 0 0 12 0.0000000 4 180 4545 975 600 its capacity=1, because it should be 0 originally, but we researve\001
4 0 -1 0 0 0 12 0.0000000 4 180 3600 150 1125 flag-OFF: this arc still has spare capacity at least 1\001
4 0 -1 0 0 0 12 0.0000000 4 180 3030 975 825 the capacity for next fiber, so it becomes 1.\001
4 0 -1 0 0 0 12 0.0000000 4 180 2670 676 1576 For those arcs on the assigned PATH\001
4 0 -1 0 0 0 12 0.0000000 4 180 2190 676 1864    For those arcs with flag-ON\001
4 0 -1 0 0 0 12 0.0000000 4 135 3495 676 2152           we have to add new fiber on these arcs => \001
4 0 -1 0 0 0 12 0.0000000 4 180 780 1201 5851 capacity--\001
4 0 -1 0 0 0 12 0.0000000 4 180 1215 1201 6151 if  capacity=0 =>\001
4 0 -1 0 0 0 12 0.0000000 4 180 765 2552 6140 capacity=1\001
4 0 -1 0 0 0 12 0.0000000 4 135 1455 2552 6428 cost+=that fiber cost\001
4 0 -1 0 0 0 12 0.0000000 4 180 1140 2552 5852 flag OFF->ON\001
4 0 -1 0 0 0 12 0.0000000 4 180 1380 1201 7051 else =>No Change \001
4 0 -1 0 0 0 12 0.0000000 4 135 585 2777 7404 cost+=0\001
4 0 -1 0 0 0 12 0.0000000 4 180 1215 2777 6828 flag OFF->OFF\001
4 0 -1 0 0 0 12 0.0000000 4 180 870 2777 7116 capacity>=1\001
4 0 -1 0 0 0 12 0.0000000 4 180 2265 676 5551    For those arcs with flag-OFF\001
4 0 -1 0 0 0 12 0.0000000 4 180 3885 1126 3001 For their corresponding arcs in other Virtual Networks\001
4 0 -1 0 0 0 12 0.0000000 4 180 1365 1426 3451 if its flag is ON =>\001
4 0 -1 0 0 0 12 0.0000000 4 180 1650 1426 4501 else its flag is OFF => \001
4 0 -1 0 0 0 12 0.0000000 4 180 3885 1127 7877 For their corresponding arcs in other Virtual Networks\001
4 0 -1 0 0 0 12 0.0000000 4 180 810 1350 8325 No Change\001
4 0 -1 0 0 0 12 0.0000000 4 180 2340 1575 10800 Block for updating Network data\001

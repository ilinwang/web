<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>Wavelength Assignment &amp; routing Algorithm for Optical Networks</TITLE>
   <META NAME="GENERATOR" CONTENT="Mozilla/3.01Gold (X11; I; SunOS 5.5 sun4m) [Netscape]">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#D9D9F3" LINK="#0000FF" VLINK="#00008B">

<CENTER><P><BASE target="new"><!BODY bgcolor=f5ccb0 70db93 d9d9f3 TEXT=black LINK=blue VLINK=darkblue></P></CENTER>

<CENTER><TABLE BORDER=1 >
<TR>
<TH BGCOLOR="#FFC0CB">
<H2 ALIGN=CENTER>Wavelength Assignment &amp; routing Algorithm for Optical
Networks </H2>
</TH>
</TR>
</TABLE></CENTER>

<H4 ALIGN=CENTER><I><FONT COLOR="#006400">This page was updated by <SCRIPT language="LiveScript">  <!--  hide script from old browsers

    document.writeln(document.lastModified+'<br>')

  // end hiding contents -->

 document.writeln('Please '+'<b><font color=black>reload</font></b> often to get the updated information');
 </SCRIPT></FONT></I></H4>

<CENTER><P>
<HR></P></CENTER>

<H2 ALIGN=CENTER>Main Procedure:</H2>

<CENTER><P><IMG SRC="./gif/assign33.gif" HEIGHT=761 WIDTH=386> 
<HR></P></CENTER>

<H3>Background:</H3>

<UL>
<LI><B>Objective:</B> </LI>

<UL>
<LI>To satisfy all the demands, assign wavelength and route for each deman
with minimum cost </LI>
</UL>

<LI><B>Constraint:</B> </LI>

<UL>
<LI>each fiber can at most let 8 wavelenths pass through </LI>

<LI>inside each fiber, each assigned wavelength must be different from
each other </LI>
</UL>

<LI><B>Given data:</B> </LI>

<UL>
<LI>Demand Matrix D, Network G (topology) <BR>
</LI>

<UL>
<LI>we can use <A HREF="http://www.bell.flab.fujitsu.co.jp/~ilin/ilin/generators.html">network
generator </A>(netgen, gridgen) to do this. But the network generated by
them may not be too good for our use. To do this, we need to specify the
followings: </LI>

<UL>
<LI># nodes, # arcs, max capacity, min capacity, max cost, min cost, max
demand, min demand </LI>

<LI>after the above are specified, the network generator will generate
a feasible network. (the demands can always be satisified, and the topology
is always connected.) </LI>
</UL>

<LI>since the network generated by the program is always feasible, I may
suggest that we do not use this method, instead, we may have to choose
another topology of network, and some reasonable demands. </LI>

<LI>Surely, it will be the best, if we can be offered a good network sample
by MCI. </LI>
</UL>
</UL>
</UL>

<P>
<HR></P>

<H3>Initialization Part:</H3>

<UL>
<LI><B>Building Virtual Network:</B> </LI>

<UL>
<LI>assume there are 8 wavelength for each fiber. <BR>
We duplicate the same topology of network 8 times, each of which represents
a network whose arc can only be passed by that wavelength.<BR>
thus, we add <FONT COLOR="#FF0000">8n</FONT> nodes, and <FONT COLOR="#FF0000">8m
</FONT>arcs.<BR>
each arc has capacity=1, cost=??(distance? or 1 [# hop]?) </LI>

<LI>for each node, we duplicate 2 <I>virtural nodes</I>, one represents
source, while the other represents sink.<BR>
thus, we add <FONT COLOR="#FF0000">2n</FONT> nodes</LI>

<LI>for each <I>virtual node</I>, we create 8 <I>virtual arcs</I> to connect
it with the corresponding nodes for all the 8 virual networks. <BR>
thus, we add <FONT COLOR="#FF0000">16n</FONT> arcs. each arc has capacity=<IMG SRC="./gif/infinity.gif" HEIGHT=11 WIDTH=17>,
cost=0; </LI>

<LI>the new topology will contain <FONT COLOR="#FF0000">10n nodes</FONT>
and <FONT COLOR="#FF0000">(8m+16n) arcs</FONT> in total. </LI>

<LI>We have 2 choices to maintain the virtual network:</LI>

<OL>
<LI><B>fixed topology</B>: we add all the virtual arcs / nodes initially,
and then, we only change the demands, without changing the topology.</LI>

<LI><B>dynamic topology</B>: we only keep <FONT COLOR="#008000">8n nodes
+ 8m arcs + </FONT><FONT COLOR="#800000">2 virtual nodes(1 source, 1 sink)
+ 16 virtual arcs </FONT>once a time. When we want to solve for next iteration(demand,
or unit), we change the <FONT COLOR="#800000">virtual nodes(1 source, 1
sink) + 16 virtual arcs </FONT><FONT COLOR="#000000">again.</FONT></LI>
</OL>
</UL>

<LI><B>Pre-analysis:</B></LI>

<UL>
<LI>change all the capacity to be <IMG SRC="./gif/infinity.gif" HEIGHT=11 WIDTH=17>,
use <B><I>Shortest Path Algorithm </I></B>to solve this problem. </LI>

<LI>From the result, we will know:</LI>

<UL>
<LI>For a demand, which arc will it passes through; how many hops it occupies;
which wavelength it uses.</LI>

<LI>For each arc in the physical network, we can calculate how many fibers
it needs.</LI>
</UL>

<LI>The result can be used for a <I><FONT COLOR="#191970"><B>lower-bound</B>
</FONT></I><FONT COLOR="#000000">reference for routing, which means, without
considering the cost of adding new fibers, this result will have the minimum
cost (shortest path) to send the messages from the source to the sink.</FONT></LI>
</UL>
</UL>

<P>
<HR></P>

<H3><FONT SIZE=+1>Main Solving Part:</FONT></H3>

<UL>
<LI>We will have 3 choices for solving this problem:</LI>

<UL>
<LI><A HREF="assign1.htm">1st method</A>: adding new fiber for all arcs
while we can't satisfy demand </LI>

<LI><A HREF="assign2.htm">2nd method</A>: solve 1 unit of demands once
a time, reserve the fiber in advance</LI>

<LI><A HREF="assign3.htm">3rd method</A>: solve 1 demand once a time (as
1st metnod), reserve the fiber in advance(as 2nd method)</LI>
</UL>
</UL>

<UL>
<LI>When to finish this main solving part.:</LI>

<UL>
<LI>after we finsih sending all the demands. because</LI>

<UL>
<LI>this is easy to implement</LI>
</UL>

<LI>after we finish sending most parts of the demands, say, 80%. because</LI>

<UL>
<LI>for the 1nd method, in the first few stages, the algorithm should perform
well. However, as we approach the end, the last few demands may try to
use the new fiber instead of old fiber, which will result in some inefficiency
for the final few stages. </LI>
</UL>
</UL>
</UL>

<H3>
<HR></H3>

<H3><FONT SIZE=+1>Truncate Cable Part:</FONT></H3>

<UL>
<LI>Truncate redundant fibers:<BR>
For the 1st method:</LI>
</UL>

<UL>
<UL>
<LI>for each arc l in the physical network, scanning the coresponding arcs
in virtual networks, delete min{capacity[i,l]} for each wavelenth i</LI>

<LI>total # of fibers for each arc = # adding new fibers + 1 - # truncated
fiber</LI>
</UL>

<P>For the 2nd &amp; 3rd method: </P>

<UL>
<P>since we have 'researved' the new fiber at any time in the process,
so, whenever we &quot;add&quot; a new fiber, we record it. Therefore, we
do not need to 'truncate' redundant fibers, because there is not any in
this method.</P>
</UL>
</UL>

<UL>
<LI>Do post-analysis once, find out the following:</LI>

<UL>
<LI>used ratio for each fiber </LI>

<LI># hops each demand occupies</LI>
</UL>
</UL>

<UL>
<LI>We will have 2 choices for choosing fibers to truncate</LI>

<UL>
<LI>choose fibers whose used ratio is lower than a <FONT COLOR="#0000FF">threshold</FONT>.
<BR>
[<FONT COLOR="#FF0000">how to define the thrshold may be a problem</FONT>]</LI>

<LI>compare post-analysis and pre-ananlysis, for # hops the demands occupies.<BR>
choose those which have occupied a 'much longer' path than whose in pre-analysis.<BR>
[<FONT COLOR="#FF0000">how to define the threshold for choosing such demands
may be a problem, too.</FONT>]<BR>
extract out those demands, and the corresponding links along the path</LI>
</UL>
</UL>

<UL>
<LI>Truncate selected fibers<BR>
after we truncate those selected fibers, we have to </LI>

<UL>
<LI>extract all the related demands out, </LI>

<LI>update the virtual networks [update the capacity, cost]<BR>
for an arc in the virtual network, if n demands are extracted from it,
it's capacity will increase n<BR>
[<FONT COLOR="#FF0000">how to update cost may be a problem</FONT>]</LI>
</UL>
</UL>

<P>
<HR></P>

<P><FONT SIZE=+2>Post-Optimization Part:</FONT></P>

<UL>
<LI>Now, we collect those demands we extracted out from Truncate Cable
Part, and we also get the new virtual network.</LI>

<LI>We can apply 2nd method or 3rd method ro rerouting these extracted
demands.</LI>
</UL>

<P>
<HR></P>

<P><FONT SIZE=+2>Final Tune-Up Part:</FONT></P>

<UL>
<LI>Now, the result should be better . We must keep this result for reference.</LI>

<LI>Since we already get a feasible network, we can use Min-cost flow algorithm(Simplex
Algorithm) to resolve this network. (virtual network)<BR>
We can use Simplex Algorithm, solve all the demands together (no need to
solve it one by one now). Get another result. See if this result make sense
or better than the previous result or not. Then choose one for our final
result.</LI>
</UL>

<P>
<HR WIDTH="100%"></P>

<P>More detailed procedures for Initialization-&gt;Main Solving part</P>

<P><IMG SRC="./gif/transform1.gif" HEIGHT=557 WIDTH=757></P>

</BODY>
</HTML>

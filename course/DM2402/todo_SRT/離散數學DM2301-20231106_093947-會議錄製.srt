1
00:00:00,000 --> 00:00:18,200
好 那很快地把Euler CIRCUIT, Euler PATH, Hamiltonian CYCLE, Hamiltonian PATH

2
00:00:18,200 --> 00:00:20,800
在很快地review一下

3
00:00:20,800 --> 00:00:24,400
Euler CIRCUIT的問題相對簡單

4
00:00:24,400 --> 00:00:33,600
它給定一個圖,然後要你看看裡面有沒有可能經過每一個edge剛好 一次又回到原點的一種走法

5
00:00:33,600 --> 00:00:37,000
如果有的話這叫做Euler CIRCUIT

6
00:00:37,000 --> 00:00:43,000
那Euler PATH是雷同,只不過你的起點跟訖點不用一樣

7
00:00:43,000 --> 00:00:51,400
那去判斷到底給定一個圖GENERAL GRAPH有沒有Euler CIRCUIT或Euler PATH,我們就用Theorem 4.5

8
00:00:51,400 --> 00:00:57,800
那它的檢查方式就是去檢查你每一個點的degree為G數還是O數

9
00:00:57,800 --> 00:01:00,600
那它是一個if and only if的判斷條件

10
00:01:00,600 --> 00:01:05,000
所以如果有EC的話,它一定每個點都要even degree

11
00:01:05,000 --> 00:01:10,800
那如果是EP的話,它就是幾乎n-2個點都是even

12
00:01:10,800 --> 00:01:16,800
那只有兩個點是odd,那兩個點剛好 就是一個當頭一個當尾

13
00:01:16,800 --> 00:01:24,200
那你要去檢驗一個圖上面的每個點的degree這件事情相對是簡單

14
00:01:24,200 --> 00:01:27,200
取決於你知不知道它的degree是什麼

15
00:01:27,200 --> 00:01:33,600
那如果已經有人跟你講每個點的degree是多少,那你要去判斷G數或O數

16
00:01:33,600 --> 00:01:38,200
這個用for loop掃過每個點,你當然就知道G數幾個O數幾個

17
00:01:38,200 --> 00:01:43,600
那如果你還不知道它的degree而你必須要去計算degree出來的話

18
00:01:43,600 --> 00:01:47,800
那就取決於你用什麼樣的data structure來存你的圖

19
00:01:47,800 --> 00:01:50,200
如果你是用adjacency matrix的話

20
00:01:50,200 --> 00:01:57,000
那你起碼可以用O的n平方的演算法去掃過所有的n平方格

21
00:01:57,000 --> 00:01:59,200
因為你就是一個row一個row這樣掃

22
00:01:59,200 --> 00:02:01,800
每一個row你要花的時間就n的一次方

23
00:02:01,800 --> 00:02:04,400
總共有n個row,那總共就是n平方格

24
00:02:04,400 --> 00:02:09,200
你就知道每一個點它到底degree是even還是odd

25
00:02:09,200 --> 00:02:11,200
這是用adjacency matrix

26
00:02:11,200 --> 00:02:14,800
那如果你用adjacency list的話,那可以再更快一點

27
00:02:14,800 --> 00:02:20,000
因為它就可以省略adjacency matrix那些0的部分

28
00:02:20,000 --> 00:02:25,000
那你直接掃每一個點,你當然就會知道它的degree是幾個

29
00:02:25,000 --> 00:02:29,000
就是跟它相連的有幾個,是even還是odd

30
00:02:29,000 --> 00:02:32,200
那總之這些都是polynomial time可以解決

31
00:02:32,200 --> 00:02:37,000
所以我們要去判斷一個圖有沒有包含Euler circuit或pass

32
00:02:37,000 --> 00:02:40,000
相對是容易,因為polynomial time就可以解決

33
00:02:41,000 --> 00:02:43,000
好 ,那 

34
00:02:43,000 --> 00:02:51,000
那再來下一個主題就是Hamiltonian cycle跟Hamiltonian path

35
00:02:51,000 --> 00:02:56,000
那它的主要重點就是你要找到一個走法

36
00:02:56,000 --> 00:03:00,000
如果是Hamiltonian cycle的話,它要經過所有的點剛好 一次

37
00:03:00,000 --> 00:03:05,000
那是跟Euler circuit的所有的edge剛好 一次是不一樣的

38
00:03:05,000 --> 00:03:07,000
它的object不一樣

39
00:03:07,000 --> 00:03:10,000
那它每個點剛好 一次又回到原點的話

40
00:03:10,000 --> 00:03:12,000
那就是Hamiltonian cycle

41
00:03:12,000 --> 00:03:16,000
那如果你只有頭尾就是不用重合的話

42
00:03:16,000 --> 00:03:18,000
那就是Hamiltonian path

43
00:03:18,000 --> 00:03:24,000
那你要去判斷你給定的general graph有沒有包含Hamiltonian cycle或pass

44
00:03:24,000 --> 00:03:26,000
這件事情是困難的

45
00:03:26,000 --> 00:03:31,000
目前為止還沒有人可以給一個polynomial time的解法

46
00:03:31,000 --> 00:03:37,000
來判斷給定的任意的圖是否包含Hc或Hp

47
00:03:37,000 --> 00:03:41,000
所以這個相對於Eulerian circuit,Eulerian path的判斷來講

48
00:03:41,000 --> 00:03:45,000
Hamiltonian cycle跟pass的判斷是困難的

49
00:03:45,000 --> 00:03:50,000
它很可能會需要花指數成長的時間才可以判斷

50
00:03:50,000 --> 00:03:53,000
好 ,除非它是一個特定的圖

51
00:03:53,000 --> 00:03:57,000
特定的圖,舉例來講,如果是complete graph of size n

52
00:03:57,000 --> 00:04:01,000
click of size n,這種圖是一個特定的圖

53
00:04:01,000 --> 00:04:03,000
請問它有沒有Hamiltonian cycle或pass

54
00:04:03,000 --> 00:04:05,000
我們很快就可以寫答案

55
00:04:05,000 --> 00:04:09,000
因為你就1,2,3,一直到n再回到1

56
00:04:09,000 --> 00:04:12,000
因為每個點都跟每個其他點相連

57
00:04:12,000 --> 00:04:16,000
所以我剛才所做的這些連結方式一定是走得通的

58
00:04:16,000 --> 00:04:18,000
那這樣子我馬上就可以告訴你說

59
00:04:18,000 --> 00:04:20,000
有,像這個就是一個

60
00:04:20,000 --> 00:04:22,000
所以這是特別的圖

61
00:04:22,000 --> 00:04:24,000
如果不是特別的圖,它的基本判斷方式

62
00:04:24,000 --> 00:04:28,000
目前沒有polynomial time的判斷方式

63
00:04:28,000 --> 00:04:33,000
那以下我們講幾個比較常見的判斷方式

64
00:04:33,000 --> 00:04:35,000
那這些常見的判斷方式

65
00:04:35,000 --> 00:04:38,000
它頂多只能夠做到單項的判斷

66
00:04:38,000 --> 00:04:42,000
舉例來講,Theorem 4.6,叫做Euler's theorem

67
00:04:42,000 --> 00:04:49,000
它必須給定一個圖,然後至少三個以上的vertex

68
00:04:49,000 --> 00:04:55,000
然後它的判斷方式就是認兩個沒有adjacent的點U跟V

69
00:04:55,000 --> 00:04:57,000
沒有adjacent的點

70
00:04:57,000 --> 00:05:00,000
那你去檢查它的degree,把它相加

71
00:05:00,000 --> 00:05:04,000
然後看它有沒有超過N

72
00:05:04,000 --> 00:05:08,000
如果有,針對某一個pair,它沒有相連的

73
00:05:08,000 --> 00:05:12,000
你通過考驗,你再檢查下一個pair

74
00:05:12,000 --> 00:05:15,000
那假設全部都通過考驗了

75
00:05:15,000 --> 00:05:20,000
那終於你可以說,我知道了,它保證一定有Hemitory cycle

76
00:05:20,000 --> 00:05:23,000
可是如果在你剛才的檢驗過程當中

77
00:05:23,000 --> 00:05:25,000
只要有一組它沒有滿足

78
00:05:25,000 --> 00:05:28,000
你差不多,你就什麼結論都不能下

79
00:05:28,000 --> 00:05:30,000
你就可以stop了

80
00:05:30,000 --> 00:05:34,000
因為那就代表,你不能夠說它有,也不能說它沒有

81
00:05:34,000 --> 00:05:38,000
這就是它不好 用的地方,因為它只有單項

82
00:05:38,000 --> 00:05:41,000
它不像Theorem 4.5是雙向的

83
00:05:41,000 --> 00:05:44,000
那你如果要去檢驗這個degree

84
00:05:44,000 --> 00:05:47,000
所花的時間其實是可以在polynomial time處理的

85
00:05:47,000 --> 00:05:52,000
那當然這個相對於前面的Euler's circuit的檢驗方式

86
00:05:52,000 --> 00:05:54,000
會比較複雜一點

87
00:05:54,000 --> 00:05:59,000
因為你必須要先把所有的non-adjacent的UV pair都把它找出來

88
00:05:59,000 --> 00:06:01,000
那什麼叫non-adjacent的UV pair?

89
00:06:01,000 --> 00:06:06,000
那概念上大概就是adjacency matrix裡面的0

90
00:06:06,000 --> 00:06:10,000
那因為是對稱的嘛,所以你可以看上三角形或下三角形

91
00:06:10,000 --> 00:06:12,000
其中的一個就好 

92
00:06:12,000 --> 00:06:15,000
只要是0,它就代表那個i跟j並沒有相連

93
00:06:15,000 --> 00:06:19,000
然後你再去看說,那個i的degree跟那個j的degree相加

94
00:06:19,000 --> 00:06:21,000
有沒有大概等於n,這件事情

95
00:06:21,000 --> 00:06:24,000
那這件事情到底要花多少時間可以檢驗

96
00:06:24,000 --> 00:06:26,000
這個請大家自己練習一下

97
00:06:26,000 --> 00:06:30,000
那應該也是polynomial time就可以檢驗

98
00:06:30,000 --> 00:06:33,000
不過它的問題是,就算你polynomial time可以檢驗

99
00:06:33,000 --> 00:06:36,000
可是一旦它違反了,你就沒有辦法給任何結論

100
00:06:36,000 --> 00:06:38,000
等同於你不用繼續做了

101
00:06:38,000 --> 00:06:40,000
因為就算你做完了,你還是不能給結論

102
00:06:40,000 --> 00:06:42,000
那你為什麼要繼續做呢?

103
00:06:42,000 --> 00:06:48,000
那Euler's theorem的證明需要用到數學歸納法跟反證法

104
00:06:48,000 --> 00:06:50,000
尤其是反證法,那裡面有一些反轉的過程

105
00:06:50,000 --> 00:06:53,000
那在這邊我們就不多提

106
00:06:53,000 --> 00:06:56,000
那這個是希望大家都可以

107
00:06:56,000 --> 00:06:59,000
所能想就是可以很容易就可以寫出為什麼

108
00:06:59,000 --> 00:07:03,000
而且很容易可以解釋為什麼這樣子

109
00:07:03,000 --> 00:07:06,000
可以證明Euler's theorem

110
00:07:06,000 --> 00:07:09,000
然後再來我們有另外一個Dirac's theorem

111
00:07:09,000 --> 00:07:15,000
那這Dirac's theorem它的證明方式跟Euler's theorem不太一樣

112
00:07:15,000 --> 00:07:18,000
其實你可以用Euler's theorem來證明它

113
00:07:18,000 --> 00:07:20,000
相對容易啦

114
00:07:20,000 --> 00:07:24,000
那Dirac's theorem跟Euler's theorem告訴我們了自雷同的概念

115
00:07:24,000 --> 00:07:27,000
也就是它只有單方向的判斷方式

116
00:07:27,000 --> 00:07:32,000
給定一個圖,那它也是至少有三個以上的點,包括三個

117
00:07:32,000 --> 00:07:35,000
那你去檢查它的每一個vertex的degree

118
00:07:35,000 --> 00:07:38,000
它至少是2分之n的話

119
00:07:38,000 --> 00:07:40,000
如果你發現這件事情是對的話

120
00:07:40,000 --> 00:07:43,000
保證它一定有Hamiltonian cycle

121
00:07:43,000 --> 00:07:49,000
ok,那這個的證明方式是需要用到數學歸納法之類的

122
00:07:49,000 --> 00:07:54,000
那在這邊我們就不提

123
00:07:54,000 --> 00:07:59,000
那請大家再自己這個想辦法去熟悉一下

124
00:07:59,000 --> 00:08:02,000
看這個是要怎麼證,其實不會很難

125
00:08:02,000 --> 00:08:07,000
那如果你要應用Dirac's theorem的話

126
00:08:07,000 --> 00:08:08,000
請問好 不好 用呢?

127
00:08:08,000 --> 00:08:10,000
當然以它的描述

128
00:08:10,000 --> 00:08:14,000
我個人覺得它相對於Euler's theorem還更好 用

129
00:08:14,000 --> 00:08:18,000
因為它要問你就是請檢查每個vertex的degree

130
00:08:18,000 --> 00:08:20,000
是否至少有2分之n

131
00:08:20,000 --> 00:08:24,000
那這個跟我們前面在講Euler's circuit的判斷

132
00:08:24,000 --> 00:08:27,000
要檢查每個點degree有雷同的做法吧

133
00:08:27,000 --> 00:08:31,000
因為你就是用一個for loop去掃過每一個vertex

134
00:08:31,000 --> 00:08:37,000
看它的degree判斷是否大於等於2分之n

135
00:08:37,000 --> 00:08:41,000
如果有你就通過考驗,如果沒有你大概可以暫停了

136
00:08:41,000 --> 00:08:45,000
因為它這邊告訴你的是它必須要每一個都滿足

137
00:08:45,000 --> 00:08:48,000
所以只要有一個不滿足,你就什麼結論也不能下

138
00:08:48,000 --> 00:08:52,000
注意這一樣也是什麼結論都不能下

139
00:08:52,000 --> 00:08:57,000
也就是你不能夠說我沒有滿足Dirac's theorem的假設

140
00:08:57,000 --> 00:09:01,000
它就沒有Hamiltonian cycle,這件事情是不對的

141
00:09:01,000 --> 00:09:07,000
它如果沒有滿足,譬如說它如果有某一個點的degree

142
00:09:07,000 --> 00:09:12,000
是比2分之n還要小,請問它有沒有可能有Hamiltonian cycle

143
00:09:12,000 --> 00:09:15,000
答案是有可能,可是到底是yes or no

144
00:09:15,000 --> 00:09:18,000
其實你不知道,這就是沒有結論

145
00:09:18,000 --> 00:09:21,000
所以當你去檢查它的degree

146
00:09:21,000 --> 00:09:23,000
發現說它大於等於2分之n的話

147
00:09:23,000 --> 00:09:25,000
那恭喜你,你可以有結論

148
00:09:25,000 --> 00:09:28,000
可是只要有一個degree比2分之n還要小

149
00:09:28,000 --> 00:09:31,000
那你就什麼結論都不能下

150
00:09:31,000 --> 00:09:34,000
所以我們當然可以用Dirac's theorem來判斷

151
00:09:34,000 --> 00:09:36,000
我們也可以用Euler's theorem來判斷

152
00:09:36,000 --> 00:09:38,000
可是這不是唯二的判斷方式

153
00:09:38,000 --> 00:09:44,000
而且就算這兩個方式你知道的都失敗了

154
00:09:44,000 --> 00:09:46,000
你還是不能夠給這個結論

155
00:09:46,000 --> 00:09:50,000
這就是Hamiltonian cycle麻煩的地方

156
00:09:50,000 --> 00:09:54,000
跟剛才的Euler's theorem和Dirac's theorem雷同的概念

157
00:09:54,000 --> 00:09:58,000
那這些都是,這個都可以去證明出來

158
00:09:58,000 --> 00:10:02,000
那除了有些可以用在Hamiltonian cycle

159
00:10:02,000 --> 00:10:05,000
有些是用在Hamiltonian path

160
00:10:05,000 --> 00:10:08,000
它證明方式應該是雷同啦

161
00:10:08,000 --> 00:10:12,000
那以下這個練習也就請大家自己去練

162
00:10:12,000 --> 00:10:14,000
這個應該不會很難

163
00:10:14,000 --> 00:10:18,000
那只不過你要去發揮一些想像力

164
00:10:18,000 --> 00:10:20,000
去找到某些圖

165
00:10:20,000 --> 00:10:22,000
比如說它有Euler's circuit

166
00:10:22,000 --> 00:10:24,000
然後也有Hamiltonian cycle

167
00:10:24,000 --> 00:10:28,000
或是它有Euler's circuit可是沒有Hamiltonian cycle

168
00:10:28,000 --> 00:10:30,000
或者是它有Hamiltonian cycle

169
00:10:30,000 --> 00:10:32,000
可是沒有Euler's circuit之類的

170
00:10:32,000 --> 00:10:35,000
就大家想辦法去舉一些例子

171
00:10:35,000 --> 00:10:36,000
這個應該不會很難舉

172
00:10:36,000 --> 00:10:38,000
那你舉的方式

173
00:10:38,000 --> 00:10:41,000
如果針對Euler's circuit或Euler's path的話

174
00:10:41,000 --> 00:10:43,000
你是可以用Theorem 4.5

175
00:10:43,000 --> 00:10:46,000
可是針對Hamiltonian cycle跟Hamiltonian path

176
00:10:46,000 --> 00:10:50,000
你可能就必須要手動的方式去

177
00:10:50,000 --> 00:10:52,000
想辦法去兜出來

178
00:10:52,000 --> 00:10:53,000
大概是這樣

179
00:10:53,000 --> 00:10:56,000
除非是有一些特定的圖

180
00:10:56,000 --> 00:10:57,000
像K-N啦

181
00:10:57,000 --> 00:11:01,000
那在這個K-N的情況之下

182
00:11:01,000 --> 00:11:04,000
因為我們剛才已經有舉過這個例子

183
00:11:04,000 --> 00:11:06,000
你如果要一個Hamiltonian path的話

184
00:11:06,000 --> 00:11:10,000
其實就是1到N的某種排列嘛

185
00:11:10,000 --> 00:11:15,000
那所以我這邊就直接寫它的答案

186
00:11:15,000 --> 00:11:17,000
總共有幾個不一樣的

187
00:11:17,000 --> 00:11:19,000
那在這邊我的意思是說

188
00:11:19,000 --> 00:11:22,000
假設三個點1 2 3

189
00:11:22,000 --> 00:11:26,000
Hamiltonian path就是它並不是繞一圈

190
00:11:26,000 --> 00:11:28,000
就1到2 2到3

191
00:11:28,000 --> 00:11:30,000
總共假設我剛好 有一個三角形

192
00:11:30,000 --> 00:11:32,000
1 2 3 這樣的一個三角形

193
00:11:32,000 --> 00:11:35,000
Hamiltonian path是不是我可以1到2到3

194
00:11:35,000 --> 00:11:37,000
這就是一個Hamiltonian path

195
00:11:37,000 --> 00:11:40,000
那這個path跟3 2 1是不是同一個

196
00:11:40,000 --> 00:11:44,000
因為我們就是undirected graph

197
00:11:44,000 --> 00:11:46,000
所以1 2 3跟3 2 1其實是同一個

198
00:11:46,000 --> 00:11:48,000
這就是為什麼這邊要除以2

199
00:11:48,000 --> 00:11:50,000
我只是很快地解釋一下

200
00:11:50,000 --> 00:11:52,000
那如果是cycle的話呢

201
00:11:52,000 --> 00:11:55,000
它其實跟Hamiltonian path的差別就是

202
00:11:55,000 --> 00:11:58,000
以前大家在高中所學過的排列組合

203
00:11:58,000 --> 00:12:00,000
我們N個人要乘一條線

204
00:12:00,000 --> 00:12:02,000
或者是N個人要把它繞一圈

205
00:12:02,000 --> 00:12:03,000
它差別在哪邊

206
00:12:03,000 --> 00:12:06,000
差別就是你頭尾是不是重合嘛

207
00:12:06,000 --> 00:12:10,000
那所以如果你現在是Hamiltonian cycle的話

208
00:12:10,000 --> 00:12:12,000
它跟Hamiltonian path的差別就是

209
00:12:12,000 --> 00:12:15,000
請問誰要當你重合的那個點

210
00:12:15,000 --> 00:12:18,000
那我1也可以當 2也可以當 3也可以當

211
00:12:18,000 --> 00:12:19,000
一直到N都可以當

212
00:12:19,000 --> 00:12:22,000
因此我們就把前面的這個解

213
00:12:22,000 --> 00:12:23,000
然後再除以N

214
00:12:23,000 --> 00:12:26,000
就可以得到後面的這個答案了

215
00:12:26,000 --> 00:12:28,000
也就是誰要當你那個重複

216
00:12:28,000 --> 00:12:30,000
頭跟尾同樣的那個人

217
00:12:30,000 --> 00:12:32,000
那這樣子而已

218
00:12:32,000 --> 00:12:35,000
所以如果大家對排列組合夠熟悉

219
00:12:35,000 --> 00:12:38,000
應該就可以知道老師剛才在講的意思

220
00:12:38,000 --> 00:12:40,000
好  那最後這個

221
00:12:40,000 --> 00:12:42,000
我這邊也稍微提一下就好 

222
00:12:42,000 --> 00:12:45,000
那我們剛才已經有花時間來解釋

223
00:12:45,000 --> 00:12:48,000
complete bipartite graph這件事情

224
00:12:48,000 --> 00:12:49,000
那它其實就是

225
00:12:49,000 --> 00:12:51,000
我有一組叫做A

226
00:12:51,000 --> 00:12:52,000
另外一組叫做B

227
00:12:52,000 --> 00:12:54,000
然後A這一組有M個點

228
00:12:54,000 --> 00:12:56,000
B這一組有N個點

229
00:12:56,000 --> 00:12:59,000
那同一組的點自己不會連

230
00:12:59,000 --> 00:13:02,000
那它一定會連到對方那一組的所有的點

231
00:13:02,000 --> 00:13:04,000
類似像這樣子

232
00:13:04,000 --> 00:13:07,000
那所以

233
00:13:07,000 --> 00:13:09,000
所以首先

234
00:13:09,000 --> 00:13:11,000
就是它這個只是先就

235
00:13:11,000 --> 00:13:13,000
這個complete bipartite graph

236
00:13:13,000 --> 00:13:15,000
它這樣子定義清楚了

237
00:13:15,000 --> 00:13:18,000
那然後它就問你說

238
00:13:18,000 --> 00:13:19,000
請問KMN有幾條edge

239
00:13:19,000 --> 00:13:21,000
那當然很容易可以知道

240
00:13:21,000 --> 00:13:23,000
因為舉例來講

241
00:13:23,000 --> 00:13:24,000
A有M個點

242
00:13:24,000 --> 00:13:26,000
B有N個點的話

243
00:13:26,000 --> 00:13:29,000
A裡面的每個點都會連到B的每一個點

244
00:13:29,000 --> 00:13:30,000
所以它的degree

245
00:13:30,000 --> 00:13:33,000
也就是它這裡就有N條edge去連

246
00:13:33,000 --> 00:13:35,000
那每個點都有N條edge去連

247
00:13:35,000 --> 00:13:37,000
那總共有M個點

248
00:13:37,000 --> 00:13:39,000
那總共就是MN條edge

249
00:13:39,000 --> 00:13:42,000
我想這個大家應該都可以理解

250
00:13:42,000 --> 00:13:45,000
然後再來就是一些

251
00:13:45,000 --> 00:13:48,000
稍微的變化的判斷而已

252
00:13:48,000 --> 00:13:52,000
那請問你KMN如果有的話

253
00:13:52,000 --> 00:13:55,000
所以之後當我們在講KMN

254
00:13:55,000 --> 00:13:59,000
我們的意思就是complete bipartite graph

255
00:13:59,000 --> 00:14:01,000
然後有一邊有M個點

256
00:14:01,000 --> 00:14:02,000
另外一邊有N個點

257
00:14:02,000 --> 00:14:04,000
所以大家就不要再說

258
00:14:04,000 --> 00:14:05,000
這個沒有定義

259
00:14:05,000 --> 00:14:07,000
有我們已經講過了

260
00:14:07,000 --> 00:14:11,000
那同理如果以後你看到KN這樣的話

261
00:14:11,000 --> 00:14:14,000
你就要知道它的意思就是complete graph

262
00:14:14,000 --> 00:14:16,000
然後下標這個N就代表說

263
00:14:16,000 --> 00:14:18,000
它有幾個vertex

264
00:14:18,000 --> 00:14:22,000
所以譬如說K3就是一個三角形

265
00:14:22,000 --> 00:14:24,000
那之類的

266
00:14:24,000 --> 00:14:26,000
那所以這一題要講的是

267
00:14:26,000 --> 00:14:28,000
請問M跟N的值是要怎麼樣

268
00:14:28,000 --> 00:14:31,000
才可以讓它有Euler's circuit

269
00:14:31,000 --> 00:14:35,000
那這個我們之前有大概有提過了

270
00:14:35,000 --> 00:14:39,000
那所以這邊就直接寫答案了

271
00:14:39,000 --> 00:14:43,000
因為針對A組它的degree

272
00:14:43,000 --> 00:14:44,000
它就是N嘛

273
00:14:44,000 --> 00:14:46,000
那針對B組它的degree就是M

274
00:14:46,000 --> 00:14:47,000
不管是怎麼樣

275
00:14:47,000 --> 00:14:48,000
因為Euler's circuit

276
00:14:48,000 --> 00:14:51,000
它一定是要偶數

277
00:14:51,000 --> 00:14:54,000
所以它就一定是要偶數

278
00:14:54,000 --> 00:14:55,000
OK好 

279
00:14:55,000 --> 00:14:59,000
那然後這邊寫至少2是因為怕

280
00:14:59,000 --> 00:15:02,000
可能會有人想說

281
00:15:02,000 --> 00:15:04,000
偶數是不是0也是算偶數呢

282
00:15:04,000 --> 00:15:05,000
之類的

283
00:15:05,000 --> 00:15:06,000
那至少是2

284
00:15:06,000 --> 00:15:08,000
好 那再來這一題

285
00:15:08,000 --> 00:15:11,000
如果是在講Hamiltonian cycle的話

286
00:15:11,000 --> 00:15:14,000
這個就要

287
00:15:14,000 --> 00:15:17,000
這個就比較相對比較麻煩一點

288
00:15:17,000 --> 00:15:23,000
那這邊我是直接用我們的Euler's theorem

289
00:15:23,000 --> 00:15:25,000
不是Euler's theorem

290
00:15:25,000 --> 00:15:27,000
Euler's theorem這樣來判斷

291
00:15:27,000 --> 00:15:30,000
或者是Dirac's theorem來判斷

292
00:15:30,000 --> 00:15:33,000
就可以得到這樣的結論

293
00:15:33,000 --> 00:15:34,000
OK好 

294
00:15:34,000 --> 00:15:37,000
那可以用這種來判斷

295
00:15:37,000 --> 00:15:39,000
也可以不用這個來判斷

296
00:15:39,000 --> 00:15:40,000
可是如果不用這個判斷

297
00:15:40,000 --> 00:15:41,000
就要有一個

298
00:15:41,000 --> 00:15:43,000
就是看說你用什麼樣的說詞

299
00:15:43,000 --> 00:15:45,000
好 OK

300
00:15:45,000 --> 00:15:49,000
好 那你要有一個Hamiltonian cycle的話

301
00:15:49,000 --> 00:15:53,000
你就是經過每個點都剛好 要一次

302
00:15:53,000 --> 00:15:57,000
那所以其實你很容易就可以推論出

303
00:15:57,000 --> 00:15:59,000
如果M跟N不一樣的話

304
00:15:59,000 --> 00:16:01,000
意思就是說我的這個by part

305
00:16:01,000 --> 00:16:03,000
如果有一邊比較小一邊比較大

306
00:16:03,000 --> 00:16:04,000
你就會發現

307
00:16:04,000 --> 00:16:07,000
好 像沒有辦法

308
00:16:07,000 --> 00:16:10,000
這個大家都剛好 過一次

309
00:16:10,000 --> 00:16:13,000
因為小的這一邊一定會重複過比較多次

310
00:16:13,000 --> 00:16:15,000
才能夠去cover大的這一邊

311
00:16:15,000 --> 00:16:17,000
大家稍微做一些例子

312
00:16:17,000 --> 00:16:18,000
你就會發現了

313
00:16:18,000 --> 00:16:20,000
那所以你就可以得到一個結論是

314
00:16:20,000 --> 00:16:22,000
M跟N應該要一樣

315
00:16:22,000 --> 00:16:24,000
當然我這邊是故意

316
00:16:24,000 --> 00:16:27,000
就是你要去解釋M跟N一樣

317
00:16:27,000 --> 00:16:29,000
也可以用我剛才那個解釋方式

318
00:16:29,000 --> 00:16:31,000
因為如果當有一邊比較小的話

319
00:16:31,000 --> 00:16:33,000
因為你那個一定要過去又回來

320
00:16:33,000 --> 00:16:34,000
又過去又回來

321
00:16:34,000 --> 00:16:36,000
又譬如說以這個來講

322
00:16:36,000 --> 00:16:37,000
這邊如果是4個點

323
00:16:37,000 --> 00:16:39,000
這邊是5個點的話

324
00:16:39,000 --> 00:16:41,000
我這樣過去回來過去回來過去回來

325
00:16:41,000 --> 00:16:45,000
就以cycle你必須要回來

326
00:16:45,000 --> 00:16:47,000
可是我就回不來

327
00:16:47,000 --> 00:16:50,000
因為它個數不一樣

328
00:16:50,000 --> 00:16:52,000
你要回得來的話

329
00:16:52,000 --> 00:16:54,000
個數就一定要一樣

330
00:16:54,000 --> 00:16:55,000
所以看你怎麼樣去解釋

331
00:16:55,000 --> 00:16:58,000
那我這邊是剛好 可以直接去應用

332
00:16:58,000 --> 00:17:00,000
這些theorem來解釋這件事情

333
00:17:00,000 --> 00:17:01,000
好 

334
00:17:01,000 --> 00:17:05,000
然後最後這一題是比較操作型的問題

335
00:17:05,000 --> 00:17:08,000
其實剛才老師大概有提過大致的概念

336
00:17:08,000 --> 00:17:11,000
就是如果我們要去用Order或Dirac theorem

337
00:17:11,000 --> 00:17:14,000
來檢驗Hc或Hp的話

338
00:17:14,000 --> 00:17:15,000
那你要怎麼做

339
00:17:15,000 --> 00:17:18,000
你的做法的complexity又是多少

340
00:17:18,000 --> 00:17:20,000
那這個就看你怎麼操作

341
00:17:20,000 --> 00:17:24,000
譬如說剛才老師有提過Order theorem的話

342
00:17:24,000 --> 00:17:26,000
因為根據它的定理

343
00:17:26,000 --> 00:17:31,000
我們必須要去把non-adjacent的vertex pair

344
00:17:31,000 --> 00:17:33,000
要把它找出來

345
00:17:33,000 --> 00:17:37,000
那大概就是給你那個adjacency matrix裡面

346
00:17:37,000 --> 00:17:41,000
譬如說我只看上三角形或下三角形的某一邊

347
00:17:41,000 --> 00:17:43,000
那你要找它的0的部分

348
00:17:43,000 --> 00:17:46,000
那所以這樣頂多

349
00:17:46,000 --> 00:17:48,000
這樣子你要scan幾個

350
00:17:48,000 --> 00:17:50,000
其實就是整個的n平方格

351
00:17:50,000 --> 00:17:51,000
差不多這個概念

352
00:17:51,000 --> 00:17:53,000
因為你一開始不曉得誰是0誰是1

353
00:17:53,000 --> 00:17:55,000
你就整個要去掃過

354
00:17:55,000 --> 00:17:57,000
那我這邊是試圖把它寫得比較精確

355
00:17:57,000 --> 00:18:01,000
不過基本上大概是n平方的概念

356
00:18:01,000 --> 00:18:04,000
因為你其實也不曉得誰是0誰是1

357
00:18:04,000 --> 00:18:07,000
那OK

358
00:18:07,000 --> 00:18:12,000
所以光做這件事情可能就n平方的時間了

359
00:18:12,000 --> 00:18:18,000
那你去找到了它的這個pair之後

360
00:18:18,000 --> 00:18:20,000
你要去算它degree

361
00:18:20,000 --> 00:18:23,000
我們如果先當成degree都已知

362
00:18:23,000 --> 00:18:25,000
就算degree是未知

363
00:18:25,000 --> 00:18:26,000
我們之前也有提過了

364
00:18:26,000 --> 00:18:28,000
degree未知你要怎麼去算

365
00:18:28,000 --> 00:18:29,000
花多少時間

366
00:18:29,000 --> 00:18:32,000
那總之大概就是n平方

367
00:18:32,000 --> 00:18:34,000
如果以order theorem的話

368
00:18:34,000 --> 00:18:37,000
那如果是derived theorem相對是比較單純

369
00:18:37,000 --> 00:18:40,000
因為它直接去看它degree

370
00:18:40,000 --> 00:18:42,000
所以如果我們假設degree已經知道的話

371
00:18:42,000 --> 00:18:45,000
那你根本就是一個for loop掃過每一個點

372
00:18:45,000 --> 00:18:46,000
你就知道啦

373
00:18:46,000 --> 00:18:50,000
所以這一題只是根據我們對order theorem

374
00:18:50,000 --> 00:18:52,000
還有derived theorem的理解

375
00:18:52,000 --> 00:18:57,000
想像一下你如果要設計演算法來實作它們的話

376
00:18:57,000 --> 00:18:59,000
那你的演算法會怎麼實作

377
00:18:59,000 --> 00:19:01,000
會花多少時間

378
00:19:01,000 --> 00:19:03,000
這樣的舉例

379
00:19:03,000 --> 00:19:07,000
好 那以上我們大概就結束了

380
00:19:07,000 --> 00:19:10,000
在Hamiltonian cycle, Hamiltonian path

381
00:19:10,000 --> 00:19:12,000
還有Euler circuit, Euler path的說明

382
00:19:12,000 --> 00:19:15,000
那大家就一直要記得一個點

383
00:19:15,000 --> 00:19:18,000
Euler circuit, Euler path是簡單的問題

384
00:19:18,000 --> 00:19:20,000
Polynomial time solvable

385
00:19:20,000 --> 00:19:22,000
Hamiltonian cycle, Hamiltonian path

386
00:19:22,000 --> 00:19:24,000
在general graph是困難的問題

387
00:19:24,000 --> 00:19:29,000
那我們常常會舉的一個叫TSP的問題

388
00:19:29,000 --> 00:19:34,000
它還其實還會比只是找到一條Hamiltonian cycle

389
00:19:34,000 --> 00:19:37,000
還要再更難一些

390
00:19:37,000 --> 00:19:41,000
因為它是要在眾多Hamiltonian cycle path裡面

391
00:19:41,000 --> 00:19:43,000
找到最短的

392
00:19:43,000 --> 00:19:46,000
那它舉例是我們還蠻常日常生活就會用到了

393
00:19:46,000 --> 00:19:51,000
因為你要去譬如說拜訪你的客戶

394
00:19:51,000 --> 00:19:52,000
你有n個客戶

395
00:19:52,000 --> 00:19:54,000
你要怎麼走

396
00:19:54,000 --> 00:19:56,000
會讓你總路程最短

397
00:19:56,000 --> 00:19:58,000
這個不是shorty path

398
00:19:58,000 --> 00:20:02,000
不是這個是traveling salesman problem


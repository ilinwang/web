1
00:00:01,000 --> 00:00:05,840
進入這個Theorem的證明的部分

2
00:00:05,840 --> 00:00:08,320
 這個證明部分

3
00:00:08,320 --> 00:00:11,520
因為我有過去的影片

4
00:00:11,520 --> 00:00:15,240
所以也有可能我今天就不會講到太多的細節

5
00:00:15,240 --> 00:00:19,040
 不外乎它就是因為是雙向的

6
00:00:19,040 --> 00:00:20,320
if and only if

7
00:00:20,320 --> 00:00:23,440
叫「雙向」，就是兩邊的方向，你都要去證

8
00:00:23,440 --> 00:00:25,480
 通常這種兩邊方向

9
00:00:25,480 --> 00:00:27,720
有可能一邊是會比較容易

10
00:00:27,720 --> 00:00:29,720
一邊要稍微花一點腦筋的

11
00:00:30,240 --> 00:00:34,760
好 我們現在就先來看

12
00:00:34,760 --> 00:00:38,200
如何去證明的簡單解釋

13
00:00:38,200 --> 00:00:39,320
好

14
00:00:39,320 --> 00:00:40,400
 

15
00:00:40,400 --> 00:00:45,480
首先我們先確認分成兩部分

16
00:00:45,480 --> 00:00:47,840
 我們先處理Euler's circuit

17
00:00:47,840 --> 00:00:51,080
Euler's path就先不處理了

18
00:00:51,080 --> 00:00:54,000
為什麼？因為Euler's path其實很相對容易處理

19
00:00:54,000 --> 00:00:56,680
如果我們已經證明完Euler's circuit的話

20
00:00:56,960 --> 00:01:01,160
你只要把那個Euler's path的頭跟尾 連起來

21
00:01:01,160 --> 00:01:03,200
自己加一條人造的 edge

22
00:01:03,200 --> 00:01:05,240
它就構成了Euler's circuit

23
00:01:05,240 --> 00:01:09,200
 你就可以用前面在證明Euler's circuit的方式

24
00:01:09,200 --> 00:01:10,440
來解釋它

25
00:01:10,440 --> 00:01:12,960
然後再把那一條人造的把它刪掉

26
00:01:12,960 --> 00:01:15,280
大概是這樣的概念來理解

27
00:01:15,280 --> 00:01:19,960
所以我們的重點就在Euler's circuit如何去證明

28
00:01:19,960 --> 00:01:23,240
好 也就是這邊所寫的這件事情

29
00:01:23,240 --> 00:01:26,320
這if and only if是雙向的

30
00:01:27,360 --> 00:01:28,920
如果它有Euler's circuit的話

31
00:01:28,920 --> 00:01:34,120
它每一個點的degree一定是偶數

32
00:01:34,120 --> 00:01:34,880
好

33
00:01:34,880 --> 00:01:40,000
好 我們先看從右到左的方向的證明

34
00:01:40,000 --> 00:01:43,840
就是如果你現在已經有一個Euler's circuit的話

35
00:01:43,840 --> 00:01:45,240
請證明

36
00:01:45,240 --> 00:01:47,520
它的degree

37
00:01:47,520 --> 00:01:49,440
每個點的degree

38
00:01:49,440 --> 00:01:50,960
是偶數

39
00:01:50,960 --> 00:01:52,360
ok 好

40
00:01:52,360 --> 00:01:53,920
 我這邊就很快地說明

41
00:01:53,920 --> 00:01:57,080
因為從右到左是相對比較容易的方向

42
00:01:57,080 --> 00:01:57,680
好

43
00:01:57,680 --> 00:01:58,320
好

44
00:01:58,320 --> 00:02:01,560
 我們現在如果已經有Euler's circuit

45
00:02:01,560 --> 00:02:05,080
 我們就可以沿著這個Euler's circuit去走

46
00:02:05,080 --> 00:02:07,680
 它經過每個點

47
00:02:07,680 --> 00:02:09,560
一定會進去那個點

48
00:02:09,560 --> 00:02:11,120
然後再出去那個點

49
00:02:11,120 --> 00:02:14,720
好這就是這邊的entering edge跟leaving edge

50
00:02:14,720 --> 00:02:17,680
這其實就是老師前面所提到的

51
00:02:17,680 --> 00:02:19,240
直覺的概念

52
00:02:19,240 --> 00:02:20,960
一進一出的概念

53
00:02:20,960 --> 00:02:22,240
成對的出現

54
00:02:23,120 --> 00:02:24,120
ok 好

55
00:02:24,120 --> 00:02:25,120
好

56
00:02:25,120 --> 00:02:25,960
 

57
00:02:25,960 --> 00:02:27,000
所以

58
00:02:27,000 --> 00:02:29,480
既然它會成對的出現

59
00:02:29,480 --> 00:02:29,920
好

60
00:02:29,920 --> 00:02:30,760
 

61
00:02:30,760 --> 00:02:31,760
 

62
00:02:31,760 --> 00:02:32,920
我們

63
00:02:32,920 --> 00:02:34,560
每個點

64
00:02:34,560 --> 00:02:35,960
這樣都會去

65
00:02:35,960 --> 00:02:37,040
經過一次

66
00:02:37,040 --> 00:02:37,560
好

67
00:02:37,560 --> 00:02:40,520
 所以總共它的degree

68
00:02:40,520 --> 00:02:42,440
一定就是偶數了

69
00:02:42,440 --> 00:02:44,000
所以這是相對簡單的

70
00:02:44,000 --> 00:02:44,920
好

71
00:02:44,920 --> 00:02:49,000
所以我們現在右邊到左邊已經說明完了

72
00:02:49,000 --> 00:02:51,840
再來我們要看左邊到右邊

73
00:02:52,600 --> 00:02:53,880
左邊右邊就是講

74
00:02:53,880 --> 00:02:55,200
現在給你一個圖

75
00:02:55,200 --> 00:02:57,800
我已經確認

76
00:02:57,800 --> 00:02:59,680
它每一個vertex的degree

77
00:02:59,680 --> 00:03:01,000
都是even

78
00:03:01,000 --> 00:03:04,480
請證明它存在Euler's circuit

79
00:03:04,480 --> 00:03:05,800
好

80
00:03:05,800 --> 00:03:08,000
 這個的證明方式

81
00:03:08,000 --> 00:03:10,960
 我們用的方式是：

82
00:03:10,960 --> 00:03:11,920
請follow

83
00:03:11,920 --> 00:03:13,760
Euler Circuit Algorithm 這個演算法

84
00:03:13,760 --> 00:03:16,240
如果你

85
00:03:16,240 --> 00:03:18,080
用這個演算法去做呢

86
00:03:18,080 --> 00:03:19,640
你就會發現

87
00:03:19,640 --> 00:03:22,480
 你找到你要的Euler's circuit了

88
00:03:22,680 --> 00:03:23,000
好

89
00:03:23,000 --> 00:03:26,400
所以它這個的證明方式是用 演算法 來證明的

90
00:03:26,400 --> 00:03:28,640
就這樣來理解

91
00:03:28,640 --> 00:03:29,960
好

92
00:03:29,960 --> 00:03:31,360
 我們

93
00:03:31,360 --> 00:03:33,720
其實現在已經差不多講完了

94
00:03:33,720 --> 00:03:34,600
好

95
00:03:34,600 --> 00:03:36,960
當然細節就是

96
00:03:36,960 --> 00:03:39,160
剛才這個演算法還沒有講 

97
00:03:39,160 --> 00:03:40,800
就是我們先假設

98
00:03:40,800 --> 00:03:43,400
有一個方法，那個方法還沒講

99
00:03:43,400 --> 00:03:46,160
  這個你只要follow那個方法

100
00:03:46,160 --> 00:03:48,040
它就可以給你Euler's circuit

101
00:03:48,040 --> 00:03:48,600
好

102
00:03:48,600 --> 00:03:49,480
 

103
00:03:49,480 --> 00:03:52,040
我們就用這樣來當成

104
00:03:52,320 --> 00:03:54,440
它從左到右是解決了這樣

105
00:03:54,440 --> 00:03:56,760
 至於這個方法怎麼work

106
00:03:56,760 --> 00:03:58,200
等一下我們就會講

107
00:03:58,200 --> 00:04:01,960
好 至於Euler's path的部分呢

108
00:04:01,960 --> 00:04:04,680
剛才 老師也已經提過了

109
00:04:04,680 --> 00:04:05,080
好

110
00:04:05,080 --> 00:04:08,480
從右到左的部分相對是容易 

111
00:04:08,480 --> 00:04:11,560
因為就是你會有一進一出一進一出

112
00:04:11,560 --> 00:04:13,640
除了頭跟尾之外..

113
00:04:13,640 --> 00:04:16,800
因為頭，它就是有出去比較多

114
00:04:16,800 --> 00:04:19,400
因為它.. 就算它等一下會回來

115
00:04:19,400 --> 00:04:21,480
注意哦..那一個點可以重複經過

116
00:04:22,000 --> 00:04:24,200
但是 edge 不能重複經過

117
00:04:24,200 --> 00:04:26,320
可是vertex可以重複經過

118
00:04:26,320 --> 00:04:26,760
好

119
00:04:26,760 --> 00:04:29,840
所以對於Euler's path來講.. 它的起點呢

120
00:04:29,840 --> 00:04:31,680
它一定是它的

121
00:04:31,680 --> 00:04:32,200
 

122
00:04:32,200 --> 00:04:33,880
edge的個數

123
00:04:33,880 --> 00:04:35,920
為什麼是奇數?

124
00:04:35,920 --> 00:04:38,800
是因為它有可能等一下 會進來、再出去

125
00:04:38,800 --> 00:04:41,120
 針對那個 也是「成對」出現

126
00:04:41,120 --> 00:04:43,120
可是因為它是起點 到最後

127
00:04:43,120 --> 00:04:44,520
它一定是會出去的

128
00:04:44,520 --> 00:04:45,200
好

129
00:04:45,200 --> 00:04:47,200
要不然它就不是起點了

130
00:04:47,200 --> 00:04:48,000
哈哈

131
00:04:48,000 --> 00:04:49,000
ok 好

132
00:04:49,000 --> 00:04:51,600
 所以它的起點個數一定是

133
00:04:51,920 --> 00:04:53,240
比較多的

134
00:04:53,240 --> 00:04:55,560
然後訖點的話.. 剛好

135
00:04:55,560 --> 00:04:56,520
 

136
00:04:56,520 --> 00:04:58,880
也是雷同..  訖點 就是

137
00:04:58,880 --> 00:05:01,120
最後你進去了 它就出不來

138
00:05:01,120 --> 00:05:02,880
 就結束了

139
00:05:02,880 --> 00:05:03,360
好

140
00:05:03,360 --> 00:05:07,080
所以 就是除了起訖點之外

141
00:05:07,080 --> 00:05:09,560
其它都是一進一出

142
00:05:09,560 --> 00:05:10,240
好

143
00:05:10,240 --> 00:05:11,920
 起訖點 就是

144
00:05:11,920 --> 00:05:14,520
起點的話 是 出去多一次

145
00:05:14,520 --> 00:05:16,840
訖點的話 是 進來多一次

146
00:05:16,840 --> 00:05:19,800
因此它們除了那一進一出 的

147
00:05:20,000 --> 00:05:21,880
Pair 配對 偶數之外

148
00:05:21,880 --> 00:05:24,760
它再多了.. 起點 多了一次 出去

149
00:05:24,760 --> 00:05:26,600
訖點 多了一次 進來 

150
00:05:26,600 --> 00:05:28,080
ok 好

151
00:05:28,080 --> 00:05:31,600
 然後呢 它的反向

152
00:05:31,600 --> 00:05:34,040
如果我已經告知你一個圖

153
00:05:34,040 --> 00:05:36,040
你檢驗它的vertex

154
00:05:36,040 --> 00:05:38,400
所有的點 除了兩個點之外

155
00:05:38,400 --> 00:05:42,160
其它的 n-2那個點的 degree 都是偶數

156
00:05:42,160 --> 00:05:45,120
 有某兩個點的 degree 是奇數

157
00:05:45,120 --> 00:05:46,240
請問

158
00:05:46,240 --> 00:05:49,560
為什麼它存在Euler's path

159
00:05:50,040 --> 00:05:51,400
 方法好

160
00:05:51,400 --> 00:05:52,520
就是一樣

161
00:05:52,520 --> 00:05:55,720
 你你既然知道 兩個點了

162
00:05:55,720 --> 00:05:58,840
你就把那個兩個點我們新加一條

163
00:05:58,840 --> 00:05:59,560
Virtual

164
00:05:59,560 --> 00:06:01,120
artificial

165
00:06:01,120 --> 00:06:03,560
也就是 人造的/假 節線(edge)

166
00:06:03,560 --> 00:06:05,600
 你一補了那條節線

167
00:06:05,600 --> 00:06:09,040
因為頭跟尾 它degree是奇數

168
00:06:09,040 --> 00:06:11,200
你補了那一條 它就變偶數了

169
00:06:11,200 --> 00:06:12,600
 就回到我們原來的

170
00:06:12,600 --> 00:06:14,120
Euler's circuit 的概念

171
00:06:14,120 --> 00:06:15,200
 你就去用

172
00:06:15,200 --> 00:06:17,680
剛剛的這個Euler's circuit algorithm

173
00:06:17,880 --> 00:06:19,880
它去把整個Euler's circuit

174
00:06:19,880 --> 00:06:21,360
都建構完了之後

175
00:06:21,360 --> 00:06:22,360
你再把

176
00:06:22,360 --> 00:06:24,760
剛剛你所新加的 virtual

177
00:06:24,760 --> 00:06:26,280
artificial 的 edge

178
00:06:26,280 --> 00:06:27,280
把它刪掉

179
00:06:27,280 --> 00:06:28,560
 你就得到

180
00:06:28,560 --> 00:06:29,600
你要的

181
00:06:29,600 --> 00:06:32,600
Euler's path 概念就是這樣

182
00:06:32,600 --> 00:06:34,760
ok 好

183
00:06:34,760 --> 00:06:36,040
然後再來

184
00:06:36,040 --> 00:06:38,000
我們現在就要講

185
00:06:38,000 --> 00:06:40,000
Euler's circuit algorithm

186
00:06:40,000 --> 00:06:41,680
的一些細節

187
00:06:41,680 --> 00:06:44,440
其實這個細節剛才我剛才藉由

188
00:06:44,440 --> 00:06:46,920
那個例子已經有大概有提過了

189
00:06:47,160 --> 00:06:48,480
也就是

190
00:06:48,480 --> 00:06:50,920
你把它想成說一個cycle

191
00:06:50,920 --> 00:06:52,440
一個cycle 的處理

192
00:06:52,440 --> 00:06:54,600
然後這個cycle 跟cycle 之間

193
00:06:54,600 --> 00:06:55,560
再把它串起來

194
00:06:55,560 --> 00:06:56,960
大概是這樣的概念

195
00:06:56,960 --> 00:06:58,240
好

196
00:06:58,240 --> 00:06:59,040
 

197
00:06:59,040 --> 00:07:00,440
 

198
00:07:00,440 --> 00:07:02,160
如果我們看

199
00:07:02,160 --> 00:07:04,640
它這邊的寫法

200
00:07:04,640 --> 00:07:06,040
的話

201
00:07:06,040 --> 00:07:07,760
好它就是寫成這樣

202
00:07:07,760 --> 00:07:12,080
首先我們先選一個點當起點

203
00:07:12,080 --> 00:07:15,200
好以下是針對Euler's circuit

204
00:07:15,200 --> 00:07:18,120
也就是它到最後訖點 會等於起點

205
00:07:18,120 --> 00:07:21,120
好我們先選某一個點呢

206
00:07:21,120 --> 00:07:23,680
 因為既然它有Euler's circuit 的話

207
00:07:23,680 --> 00:07:24,960
每個點一定

208
00:07:24,960 --> 00:07:27,000
 都可以當起點或訖點

209
00:07:27,000 --> 00:07:29,000
所以你就是任選一點就對了

210
00:07:29,000 --> 00:07:30,840
 就任選一點 u

211
00:07:30,840 --> 00:07:33,600
 如果你發現在那個 u 有 loop

212
00:07:33,600 --> 00:07:35,480
你就先把它經過 

213
00:07:35,480 --> 00:07:36,160
什麼意思？

214
00:07:36,160 --> 00:07:38,040
就是因為我們現在是 multigraph

215
00:07:38,040 --> 00:07:39,840
所以它有可能有好幾個 loop

216
00:07:39,840 --> 00:07:41,560
好它可能這樣連出去

217
00:07:41,560 --> 00:07:43,360
沒錯

218
00:07:44,240 --> 00:07:46,040
可是它可能也有好幾個 loop

219
00:07:46,040 --> 00:07:47,520
好 所以它在講的就是

220
00:07:47,520 --> 00:07:49,640
反正你看它 loop 你就把它「先走」

221
00:07:49,640 --> 00:07:51,720
然後 「先走」的意思 就是可以把它「刪掉」的意思

222
00:07:51,720 --> 00:07:53,680
 因為我們也知道 根本就沒差

223
00:07:53,680 --> 00:07:55,120
好 當然

224
00:07:55,120 --> 00:07:56,520
你如果會有 loop 的話

225
00:07:56,520 --> 00:07:58,960
我們前面有講是根據我們的 loop

226
00:07:58,960 --> 00:08:01,200
它其實是要算成一進一出的哦

227
00:08:01,200 --> 00:08:03,200
yeah ok 也就它degree 是2

228
00:08:03,200 --> 00:08:05,560
好 所以.. 總之 我們就

229
00:08:05,560 --> 00:08:08,040
等一下的過程它都會有這一句話

230
00:08:08,040 --> 00:08:10,080
就是如果有 loop 你就把那個 loop 先走過

231
00:08:10,080 --> 00:08:10,480


232
00:08:10,480 --> 00:08:13,120
  所以我們再來 就可無視這句話了

233
00:08:13,120 --> 00:08:15,240
好 因為它的意思 就是 反正你就先走

234
00:08:15,240 --> 00:08:18,080
loop 然後走過 就把它 刪掉 的意思 

235
00:08:18,080 --> 00:08:19,120
好好

236
00:08:19,120 --> 00:08:22,320
 所以如果有 loop 你就經過 

237
00:08:22,320 --> 00:08:24,000
有朝一日你一定會出來

238
00:08:24,000 --> 00:08:27,960
好 你會出來的話 你就會有從這個 u

239
00:08:27,960 --> 00:08:31,400
沿著某一個 edge e1 到了 u1

240
00:08:31,400 --> 00:08:33,240
ok 好

241
00:08:33,240 --> 00:08:36,800
 這邊藍色的 主要是在解釋說

242
00:08:36,800 --> 00:08:37,520
 

243
00:08:37,520 --> 00:08:39,960
因為我們現在要討論的

244
00:08:39,960 --> 00:08:41,400
至少有兩個點嘛

245
00:08:41,400 --> 00:08:43,000
所以所以它就一定會

246
00:08:44,040 --> 00:08:45,240
有辦法出去 就對了

247
00:08:45,240 --> 00:08:46,640
好  

248
00:08:46,640 --> 00:08:47,360
 

249
00:08:47,360 --> 00:08:50,800
然後我們現在就看說如果從 u

250
00:08:50,800 --> 00:08:52,560
跑到 u1

251
00:08:52,560 --> 00:08:56,520
好然後再來我們就要從 u1 再繼續討論了

252
00:08:56,520 --> 00:08:58,680
 從 u1 的討論方式一樣

253
00:08:58,680 --> 00:09:00,480
如果 u1 也有 loop

254
00:09:00,480 --> 00:09:02,240
 比如說這個叫做 u1

255
00:09:02,240 --> 00:09:03,080
然後它有 loop

256
00:09:03,080 --> 00:09:04,720
 反正只要有 loop 你就先經過

257
00:09:04,720 --> 00:09:06,480
所以再來我們就不特別

258
00:09:06,480 --> 00:09:08,000
再提 loop 這件事了

259
00:09:08,000 --> 00:09:10,240
好.. 然後，再來呢

260
00:09:10,240 --> 00:09:12,120
你一定可以再找到另外一個 edge

261
00:09:12,480 --> 00:09:13,840
像剛才這個是 e1

262
00:09:13,840 --> 00:09:15,360
 這個是 edge e2

263
00:09:15,360 --> 00:09:18,360
好 為什麼？因為一進一出

264
00:09:18,360 --> 00:09:20,160
因為我們現在

265
00:09:20,160 --> 00:09:23,400
Theorem 4.5的 Euler circuit 的左手邊

266
00:09:23,400 --> 00:09:24,760
我們告訴你每個

267
00:09:24,760 --> 00:09:25,880
vertex 的

268
00:09:25,880 --> 00:09:28,360
degree 是偶數

269
00:09:28,360 --> 00:09:30,920
所以當我找到了一個 e1

270
00:09:30,920 --> 00:09:32,520
進到這個 u1 的話

271
00:09:32,520 --> 00:09:34,320
你一定可以找到一個 e2 可以出去

272
00:09:34,320 --> 00:09:36,080
為什麼? 因為 它是偶數

273
00:09:36,080 --> 00:09:39,320
ok 好 所以 e2 你一定可以找到

274
00:09:39,320 --> 00:09:42,280
好 然後我們就重複這件事情

275
00:09:42,320 --> 00:09:43,320
重複這件事情

276
00:09:43,320 --> 00:09:45,200
有朝一日 你一定會回到 u

277
00:09:45,200 --> 00:09:45,720
哈哈

278
00:09:45,720 --> 00:09:48,400
 這個可能會對於一些同學

279
00:09:48,400 --> 00:09:49,520
會覺得說 

280
00:09:49,520 --> 00:09:51,960
是嗎? 會不會永遠的回不到 u

281
00:09:51,960 --> 00:09:53,240
好 

282
00:09:53,240 --> 00:09:54,800
不會! 好

283
00:09:54,800 --> 00:09:56,320
 為什麼不會? 是因為

284
00:09:56,320 --> 00:09:58,520
我們目前所考慮的 edge 個數

285
00:09:58,520 --> 00:10:00,880
 是有限的 它不會無限多個

286
00:10:00,880 --> 00:10:03,440
然後，我們的圖是連接(connected)在一起的

287
00:10:03,440 --> 00:10:05,160
也就是你這樣 不論怎麼連呢

288
00:10:05,160 --> 00:10:07,880
到最後一定是會連回來了

289
00:10:07,880 --> 00:10:09,600
你不可能一直連連到無限遠

290
00:10:09,600 --> 00:10:10,520
然後就回不來

291
00:10:10,960 --> 00:10:13,520
好 ok 好 

292
00:10:13,520 --> 00:10:17,640
 當然有一種情況 是你連連回來

293
00:10:17,640 --> 00:10:18,240
然後

294
00:10:18,240 --> 00:10:21,080
哦有可能看起來說 

295
00:10:21,080 --> 00:10:23,000
我像已經在這過程當中

296
00:10:23,000 --> 00:10:25,320
我已經先構成了一個 cycle 了

297
00:10:25,320 --> 00:10:25,920
之類的

298
00:10:25,920 --> 00:10:28,640
我的意思說你可能到這邊

299
00:10:28,640 --> 00:10:29,320
結果你..

300
00:10:29,320 --> 00:10:31,400
像我這邊 是因為我先畫成

301
00:10:31,400 --> 00:10:32,840
一個從 u 出發

302
00:10:32,840 --> 00:10:34,280
再回到 u 的一條

303
00:10:34,280 --> 00:10:35,160
cycle

304
00:10:35,160 --> 00:10:36,120
可是譬如說

305
00:10:36,120 --> 00:10:37,600
像我們剛才不是有 種例子

306
00:10:37,600 --> 00:10:39,440
就是你有可能到這個點之後

307
00:10:39,640 --> 00:10:41,560
你可能不是沿著這條走 

308
00:10:41,560 --> 00:10:43,720
你是沿另外的這條走對不對

309
00:10:43,720 --> 00:10:46,440
好 就如果你是這樣走的話

310
00:10:46,440 --> 00:10:47,800
你其實會

311
00:10:47,800 --> 00:10:50,200
經過另外一個 cycle

312
00:10:50,200 --> 00:10:51,880
好就是從這條出發的

313
00:10:51,880 --> 00:10:52,880
另外一個 cycle

314
00:10:52,880 --> 00:10:53,960
不過無所謂

315
00:10:53,960 --> 00:10:55,600
因為你一定還是可以出去

316
00:10:55,600 --> 00:10:57,000
好所以

317
00:10:57,000 --> 00:10:59,640
這句話其實是最重要的一句話

318
00:10:59,640 --> 00:11:01,480
就是我們一直重複呢

319
00:11:01,480 --> 00:11:04,040
好它其實有朝一日一定會回來了

320
00:11:04,040 --> 00:11:05,320
 原因

321
00:11:05,320 --> 00:11:08,520
是因為我們的 edge那個數有限

322
00:11:08,680 --> 00:11:10,440
而且我們的圖是 connected

323
00:11:10,440 --> 00:11:13,080
這個時候這個 connected 就蠻重要了

324
00:11:13,080 --> 00:11:15,800
哈哈其實雖然說這很符合直覺了

325
00:11:15,800 --> 00:11:16,800
可是有時候你

326
00:11:16,800 --> 00:11:18,240
你如果不小心的話

327
00:11:18,240 --> 00:11:19,640
其實還是有可能有問題

328
00:11:19,640 --> 00:11:21,880
譬如說我現在如果給一個圖

329
00:11:21,880 --> 00:11:24,800
好這是老師最常舉例的

330
00:11:24,800 --> 00:11:26,520
這不是兩個圖

331
00:11:26,520 --> 00:11:27,720
這是一個圖

332
00:11:27,720 --> 00:11:31,080
好只不過這個圖有兩個 component

333
00:11:31,080 --> 00:11:33,880
好就是 component 就是部分 

334
00:11:33,880 --> 00:11:35,720
就是它最大連結的

335
00:11:35,720 --> 00:11:37,080
整體一團

336
00:11:37,440 --> 00:11:38,800
總共看到兩團

337
00:11:38,800 --> 00:11:40,080
它是一個圖

338
00:11:40,080 --> 00:11:41,080
它不是兩個圖

339
00:11:41,080 --> 00:11:43,560
 當然這個圖就是 disconnected

340
00:11:43,560 --> 00:11:46,320
因為左邊的這一團跟右邊這一團

341
00:11:46,320 --> 00:11:47,680
它並沒有串在一起

342
00:11:47,680 --> 00:11:49,720
好所以我這邊只是要強調

343
00:11:49,720 --> 00:11:53,960
為什麼我們要假設 graph 是 connected

344
00:11:53,960 --> 00:11:56,240
因為我如果給你的這個圖

345
00:11:56,240 --> 00:11:59,600
它一看就是沒有 connected

346
00:11:59,600 --> 00:12:02,840
可是你去檢查我們 Theorem 4.5

347
00:12:02,840 --> 00:12:04,520
它的假設

348
00:12:04,520 --> 00:12:07,320
請問左手邊這一串

349
00:12:07,640 --> 00:12:09,840
它的每個點的 degree 是多少呢？

350
00:12:09,840 --> 00:12:11,680
你會發現 通通都是2

351
00:12:11,680 --> 00:12:13,960
右手邊呢？也都是2

352
00:12:13,960 --> 00:12:16,280
這就符合我們前面所講的

353
00:12:16,280 --> 00:12:18,840
degree 是偶數的假設 

354
00:12:18,840 --> 00:12:21,560
好所以我們剛才一直在講

355
00:12:21,560 --> 00:12:22,600
degree 是偶數

356
00:12:22,600 --> 00:12:23,600
degree 是偶數

357
00:12:23,600 --> 00:12:27,360
彷彿這件事情是這個定理最重要的特性

358
00:12:27,360 --> 00:12:28,600
 這是對的

359
00:12:28,600 --> 00:12:31,560
好.. 可是，其實在這個特性之前

360
00:12:31,560 --> 00:12:33,160
我們有一個假設

361
00:12:33,160 --> 00:12:36,760
那個假設叫做 圖必須要 connected

362
00:12:36,840 --> 00:12:38,560
好 剛才

363
00:12:38,560 --> 00:12:40,960
因為通常我們假設都很快帶過了

364
00:12:40,960 --> 00:12:42,560
圖是 connected

365
00:12:42,560 --> 00:12:46,280
所以如果我一開始就開宗明義給你一個

366
00:12:46,280 --> 00:12:47,640
不是 connected 的圖

367
00:12:47,640 --> 00:12:51,160
 你其實就不用費心再檢查了

368
00:12:51,160 --> 00:12:53,880
因為你如果是 非connected 的圖的話

369
00:12:53,880 --> 00:12:57,360
我站在左邊我當然可以連到我左邊的

370
00:12:57,360 --> 00:12:59,680
可是你怎麼樣 就連不到右邊嘛

371
00:12:59,680 --> 00:13:01,400
好 既然連不到右邊

372
00:13:01,400 --> 00:13:03,880
你就不可能串成一個 circuit

373
00:13:03,880 --> 00:13:06,200
因為我們要變成 circuit 的意思是

374
00:13:06,200 --> 00:13:09,200
它一定要 整個串在一起，connected

375
00:13:09,200 --> 00:13:10,960
好 ok 好

376
00:13:10,960 --> 00:13:13,200
所以我這邊是故意舉例 

377
00:13:13,200 --> 00:13:16,560
就是大家不要一直在著重重點在

378
00:13:16,560 --> 00:13:19,000
你的 degree 是否為偶數..

379
00:13:19,000 --> 00:13:20,280
這當然是重點

380
00:13:20,280 --> 00:13:22,400
可是你要注意它的假設

381
00:13:22,400 --> 00:13:25,440
它是否一開始給你的

382
00:13:25,440 --> 00:13:27,080
就是一個 connected 的圖 

383
00:13:27,080 --> 00:13:28,600
就這件事情要小心

384
00:13:28,600 --> 00:13:30,600
 如果是的話 

385
00:13:30,600 --> 00:13:32,480
那就是這裡在講的

386
00:13:32,480 --> 00:13:35,440
如果是的話.. 它有朝一日它一定會連回來了

387
00:13:35,760 --> 00:13:36,880
ok ok

388
00:13:36,880 --> 00:13:38,640
因為它就會被逼的

389
00:13:38,640 --> 00:13:40,800
譬如「你不能夠經過 重複的 節線」

390
00:13:40,800 --> 00:13:43,640
好 它就會被逼的那個

391
00:13:43,640 --> 00:13:46,280
 每個 節線 都不會重複經過

392
00:13:46,280 --> 00:13:47,280
當然有一個

393
00:13:47,280 --> 00:13:49,160
情況就是我剛才講的 種情況

394
00:13:49,160 --> 00:13:50,840
譬如說我剛才舉的這個例子

395
00:13:50,840 --> 00:13:52,720
好 譬如說以這個例子來講

396
00:13:52,720 --> 00:13:55,080
我先走完這裡對不對

397
00:13:55,080 --> 00:13:58,120
然後我如果再從這邊繼續走

398
00:13:58,120 --> 00:14:01,760
你感覺好像我就變 disconnected 的

399
00:14:01,760 --> 00:14:04,200
因為我現在如果把它想成說紅色的

400
00:14:04,200 --> 00:14:05,920
線段就是被我刪掉了

401
00:14:05,920 --> 00:14:08,360
好  我現在就等同於我現在已經

402
00:14:08,360 --> 00:14:09,840
a 出發 a 結束了

403
00:14:09,840 --> 00:14:12,880
哇.. 可是 這一邊還沒走到，該怎麼辦？

404
00:14:12,880 --> 00:14:14,920
好 就會有這個問題嘛

405
00:14:14,920 --> 00:14:17,800
對不對？ 好 其實這個是因為單純只是

406
00:14:17,800 --> 00:14:20,600
因為你的演算法過程的問題

407
00:14:20,600 --> 00:14:23,680
好 解決的方式 就是你可以先

408
00:14:23,680 --> 00:14:27,360
無視.. 就是譬如說我剛才講的

409
00:14:27,360 --> 00:14:29,000
我如果先這樣走的話

410
00:14:29,000 --> 00:14:30,960
這紅色的部分都被我刪掉了

411
00:14:30,960 --> 00:14:33,080
好  你就再注意說

412
00:14:33,080 --> 00:14:35,560
 請問剩下圖 還有哪邊 沒有被走到？

413
00:14:35,560 --> 00:14:39,200
當然 現在剩下的圖 就右邊 還沒被走到

414
00:14:39,200 --> 00:14:41,040
然後 右邊還沒被走到

415
00:14:41,040 --> 00:14:42,520
你就去找一個

416
00:14:42,520 --> 00:14:45,160
這樣的還沒被走到的點

417
00:14:45,160 --> 00:14:48,120
好 你一定可以找到有某一個點

418
00:14:48,120 --> 00:14:50,560
它跟剛才紅色的有

419
00:14:50,560 --> 00:14:51,600
卡(connect)到

420
00:14:51,600 --> 00:14:54,760
譬如說 以這個情況 就是 c 這個點

421
00:14:54,760 --> 00:14:56,560
跟紅色的有卡到

422
00:14:56,560 --> 00:14:57,680
然後你就

423
00:14:57,680 --> 00:15:00,480
用那個點出發 

424
00:15:00,480 --> 00:15:02,200
然後再去走一圈

425
00:15:02,760 --> 00:15:04,920
 這樣子你就又得到一個 cycle 嘛

426
00:15:04,920 --> 00:15:05,840
對不對? 

427
00:15:05,840 --> 00:15:07,120
 然後

428
00:15:07,120 --> 00:15:09,000
你再把剛才

429
00:15:09,000 --> 00:15:12,840
你所碰到的這些 circuit 跟 cycle

430
00:15:12,840 --> 00:15:14,280
把它組在一起

431
00:15:14,280 --> 00:15:15,440
好 

432
00:15:15,440 --> 00:15:17,280
就如我剛才所說的

433
00:15:17,280 --> 00:15:20,000
我可以先這樣走完這個

434
00:15:20,000 --> 00:15:22,120
然後再走到 c 的時候

435
00:15:22,120 --> 00:15:23,680
我先不要急著回 a

436
00:15:23,680 --> 00:15:26,760
因為我就把剛才 c

437
00:15:26,760 --> 00:15:29,280
的帶領的這一串

438
00:15:29,280 --> 00:15:30,360
circuit

439
00:15:30,960 --> 00:15:32,600
當然以這邊來講是 cycle

440
00:15:32,600 --> 00:15:33,000
好

441
00:15:33,000 --> 00:15:34,760
我之所以講 circuit 是因為

442
00:15:34,760 --> 00:15:36,720
 萬一如果這邊還有一串

443
00:15:36,720 --> 00:15:37,840
的話好

444
00:15:37,840 --> 00:15:40,000
 你其實是應該從 c 出發

445
00:15:40,000 --> 00:15:41,840
然後先把這一串都走完了

446
00:15:41,840 --> 00:15:43,160
再回到 c

447
00:15:43,160 --> 00:15:45,640
這整個就變成一個 circuit

448
00:15:45,640 --> 00:15:47,160
好 

449
00:15:47,160 --> 00:15:50,320
總之你從 a 出發

450
00:15:50,320 --> 00:15:53,400
然後走到了 c 之後先不要急著回 a

451
00:15:53,400 --> 00:15:54,880
而是去把 c

452
00:15:54,880 --> 00:15:57,560
剛才的這整串 circuit

453
00:15:57,560 --> 00:15:59,760
就如老師剛才有提到一個概念

454
00:16:00,040 --> 00:16:02,160
把它想成是可以濃縮成

455
00:16:02,160 --> 00:16:03,080
一個點

456
00:16:03,080 --> 00:16:05,480
而那個點就在你的 c 這個點

457
00:16:05,480 --> 00:16:06,560
所以

458
00:16:06,560 --> 00:16:09,200
有點像說我現在就把這整個 circuit

459
00:16:09,200 --> 00:16:09,800
走完了

460
00:16:09,800 --> 00:16:11,200
然後我把這整個走法

461
00:16:11,200 --> 00:16:13,000
把它隱藏在 c 這個點

462
00:16:13,000 --> 00:16:15,800
 等一下我如果碰到 c 這個點的話

463
00:16:15,800 --> 00:16:17,800
我就把剛才隱藏的那個走法

464
00:16:17,800 --> 00:16:19,200
把它整個展開

465
00:16:19,200 --> 00:16:22,480
好 展開的意思就是它從 c 出發

466
00:16:22,480 --> 00:16:24,280
然後走完又回到 c 嘛

467
00:16:24,280 --> 00:16:26,000
因為是一個 circuit 嘛

468
00:16:26,000 --> 00:16:27,680
然後它就繼續走

469
00:16:28,920 --> 00:16:30,360
好 我剛才已經講完了

470
00:16:30,360 --> 00:16:33,840
我剛才講的其實就是在講這一頁

471
00:16:33,840 --> 00:16:35,960
Euler's circuit algorithm

472
00:16:35,960 --> 00:16:37,640
好

473
00:16:37,640 --> 00:16:39,960
 這個 Euler's circuit algorithm

474
00:16:39,960 --> 00:16:41,560
你如果看不同的書

475
00:16:41,560 --> 00:16:43,720
它的寫法稍有不同

476
00:16:43,720 --> 00:16:46,240
不過概念是大概就雷同

477
00:16:46,240 --> 00:16:49,880
ok 好它概念我現在就

478
00:16:49,880 --> 00:16:51,800
其實剛才大概已經解釋過了

479
00:16:51,800 --> 00:16:53,520
 很快我再

480
00:16:53,520 --> 00:16:55,960
根據這一頁的 pseudo code

481
00:16:55,960 --> 00:16:56,840
再講一次

482
00:16:57,480 --> 00:17:00,000
首先它先有一個初始化

483
00:17:00,000 --> 00:17:02,920
它就是把所有的 edge 通都

484
00:17:02,920 --> 00:17:06,200
做成一個集合大 E 這個是大家早就知道了

485
00:17:06,200 --> 00:17:09,720
好然後呢 我們就任選一個點 u

486
00:17:09,720 --> 00:17:11,480
ok 好

487
00:17:11,480 --> 00:17:13,000
然後它寫的這句話

488
00:17:13,000 --> 00:17:15,280
它的意思就是如果有 loop 你就先

489
00:17:15,280 --> 00:17:17,160
把它經過了

490
00:17:17,160 --> 00:17:20,240
好 如果沒有 loop 我們就這句話

491
00:17:20,240 --> 00:17:22,120
後面這句話就無視了

492
00:17:22,120 --> 00:17:23,880
好然後我們先看

493
00:17:23,880 --> 00:17:26,080
請問 E 是不是空的

494
00:17:26,840 --> 00:17:27,920
這個 while loop

495
00:17:27,920 --> 00:17:30,560
只要 E 還不是空，它就繼續做

496
00:17:30,560 --> 00:17:33,160
 什麼意思？ 

497
00:17:33,160 --> 00:17:35,320
其實就把它想說

498
00:17:35,320 --> 00:17:36,840
因為我們的 Euler's circuit

499
00:17:36,840 --> 00:17:38,480
要經過所有的 edge 嘛

500
00:17:38,480 --> 00:17:41,720
所以只要還有 edge 還沒有被你走過

501
00:17:41,720 --> 00:17:43,200
 你就要處理

502
00:17:43,200 --> 00:17:44,400
大概是這個意思

503
00:17:44,400 --> 00:17:46,120
 我一旦走過

504
00:17:46,120 --> 00:17:47,480
我大概就可以把

505
00:17:47,480 --> 00:17:49,520
那個走過的 edge

506
00:17:49,520 --> 00:17:52,080
從大 E 這個 set 把它刪掉

507
00:17:52,080 --> 00:17:56,120
所以大 E 這個 set 的元素 就會越來越少

508
00:17:56,320 --> 00:17:58,680
因為你每過了一段 edge

509
00:17:58,680 --> 00:18:01,920
那個 edge 就等同於可以被你刪掉

510
00:18:01,920 --> 00:18:04,080
然後因為你的 edge 只會經過

511
00:18:04,080 --> 00:18:05,520
exactly once

512
00:18:05,520 --> 00:18:06,600
所以你刪掉

513
00:18:06,600 --> 00:18:08,480
等一下 你也不會把它 再補回來了

514
00:18:08,480 --> 00:18:09,720
好 大概是這個意思

515
00:18:09,720 --> 00:18:13,120
好好 所以它在判斷說 到底有沒有結束呢？

516
00:18:13,120 --> 00:18:14,200
就是看我的

517
00:18:14,200 --> 00:18:17,360
edge 所構成的集合裡面 還有東西嗎？

518
00:18:17,360 --> 00:18:19,840
好 ok 好好

519
00:18:19,840 --> 00:18:22,000
 每一回合你就是選

520
00:18:22,000 --> 00:18:23,960
某一個點

521
00:18:25,320 --> 00:18:27,880
好然後那個點是哪一個點呢？

522
00:18:27,880 --> 00:18:29,840
那個點就是跟你剛才

523
00:18:29,840 --> 00:18:31,960
 就是

524
00:18:31,960 --> 00:18:36,200
剛才不是有一個 c 嗎

525
00:18:36,200 --> 00:18:38,040
好好 ok

526
00:18:38,040 --> 00:18:40,000
我剛才雖然說講的很快了

527
00:18:40,000 --> 00:18:42,800
來我們再從頭看一下剛才那個 c 是什麼

528
00:18:42,800 --> 00:18:45,240
我們一開始說我們選一個點 u

529
00:18:45,240 --> 00:18:47,480
然後說 c 就是一個 path

530
00:18:47,480 --> 00:18:49,680
只包含 u 的這個 path

531
00:18:49,680 --> 00:18:51,560
好然後我剛才的解讀是說

532
00:18:51,560 --> 00:18:53,040
它的意思就是有 loop 的話

533
00:18:53,040 --> 00:18:53,760
你就先經過

534
00:18:53,760 --> 00:18:55,480
 萬一如果它沒有 loop 呢

535
00:18:55,480 --> 00:18:56,920
譬如說 u 這個點

536
00:18:56,920 --> 00:18:58,040
如果它有 loop

537
00:18:58,040 --> 00:19:00,920
你當然就從它出發又把它經過嘛

538
00:19:00,920 --> 00:19:02,520
對不對 如果它沒有 loop

539
00:19:02,520 --> 00:19:03,960
 就是這個點自己嘛

540
00:19:03,960 --> 00:19:05,360
也就是現在 c

541
00:19:05,360 --> 00:19:08,120
就是這個點自己

542
00:19:08,120 --> 00:19:10,480
ok 好好

543
00:19:10,480 --> 00:19:14,600
所以 c 是要去儲存它的

544
00:19:14,600 --> 00:19:19,800
c 呢就是還是這個點 only 這樣 

545
00:19:19,800 --> 00:19:21,360
如果它有一個 loop

546
00:19:21,360 --> 00:19:23,560
它就等於從這個 u 出發

547
00:19:23,680 --> 00:19:24,880
把這個 loop 走完

548
00:19:24,880 --> 00:19:27,720
還是回到 u 這個點的這個 c

549
00:19:27,720 --> 00:19:30,040
  c 就是一條路徑就對了

550
00:19:30,040 --> 00:19:30,880
好不管

551
00:19:30,880 --> 00:19:33,040
然後我們現在其實就是要去看說

552
00:19:33,040 --> 00:19:35,680
有沒有哪一個 v  

553
00:19:35,680 --> 00:19:37,560
 它是在這個 c 上

554
00:19:37,560 --> 00:19:40,080
 如果我們一開始是從 u 出發的話

555
00:19:40,080 --> 00:19:42,600
 當然就只有 u 自己了 

556
00:19:42,600 --> 00:19:45,280
也就 u 自己就是這個 v   ok

557
00:19:45,280 --> 00:19:48,120
好 然後 

558
00:19:48,120 --> 00:19:50,240
你就再想辦法

559
00:19:50,240 --> 00:19:51,600
就是

560
00:19:51,960 --> 00:19:53,720
去看說 這個 u

561
00:19:53,720 --> 00:19:55,040
還有沒有

562
00:19:55,040 --> 00:19:57,400
跟哪些 edge 相連

563
00:19:57,400 --> 00:20:00,200
的意思 大家講的就是這個意思

564
00:20:00,200 --> 00:20:01,840
好那一定有

565
00:20:01,840 --> 00:20:04,040
好因為為什麼叫一定

566
00:20:04,040 --> 00:20:05,880
因為我們從 u 出發的嘛

567
00:20:05,880 --> 00:20:08,640
  我們剛才如果有 loop 就經過 loop

568
00:20:08,640 --> 00:20:09,960
  loop 可以無視嘛

569
00:20:09,960 --> 00:20:13,400
好 因為我給你的圖至少是兩個點嘛

570
00:20:13,400 --> 00:20:15,320
所以 u那一定還會跟

571
00:20:15,320 --> 00:20:17,560
至少還會跟另外一個點相連嘛

572
00:20:17,560 --> 00:20:19,920
所以一定有好 ok 好

573
00:20:19,920 --> 00:20:21,040
 所以譬如說

574
00:20:21,120 --> 00:20:22,760
我們就去找某一個 v

575
00:20:22,760 --> 00:20:25,600
 剛才這個 u 就 v  

576
00:20:25,600 --> 00:20:27,760
然後它就看說這個 u

577
00:20:27,760 --> 00:20:29,080
也就是這個 v

578
00:20:29,080 --> 00:20:30,680
我們現在講第一回合 

579
00:20:30,680 --> 00:20:32,960
它有沒有跟某個 edge 相連 

580
00:20:32,960 --> 00:20:33,920
我剛才就是要解釋說

581
00:20:33,920 --> 00:20:35,200
它一定有跟 edge 相連

582
00:20:35,200 --> 00:20:37,160
而且這個 edge 的個數一定是偶數

583
00:20:37,160 --> 00:20:39,920
好 所以如果有的話

584
00:20:39,920 --> 00:20:43,360
好你就去把

585
00:20:43,360 --> 00:20:45,880
 那個 edge

586
00:20:45,880 --> 00:20:47,920
好就是把它納進來

587
00:20:47,920 --> 00:20:49,560
ok 好

588
00:20:50,120 --> 00:20:51,520
 把納進來之後

589
00:20:51,520 --> 00:20:53,440
你就看對方那一頭

590
00:20:53,440 --> 00:20:55,000
哦是

591
00:20:55,000 --> 00:20:58,400
就是我這邊講的這個 w 啦

592
00:20:58,400 --> 00:20:59,480
ok 好

593
00:20:59,480 --> 00:21:01,520
ok 好 

594
00:21:01,520 --> 00:21:03,120
然後再來呢

595
00:21:03,120 --> 00:21:05,920
set v 等於 w 的意思 

596
00:21:05,920 --> 00:21:08,240
它的意思其實就是我們現在

597
00:21:08,240 --> 00:21:09,960
把這個 point v

598
00:21:09,960 --> 00:21:13,160
好我我現在就把這個 v 叫做 point 啦

599
00:21:13,160 --> 00:21:14,840
也就是我們現在要檢查的

600
00:21:14,840 --> 00:21:15,840
到底在檢查哪個點

601
00:21:15,840 --> 00:21:18,000
一開始我們要檢查的是 u 這個點

602
00:21:18,000 --> 00:21:19,280
然後我們就看說

603
00:21:19,280 --> 00:21:21,000
u 有沒有跟哪些 edge 相連呢

604
00:21:21,000 --> 00:21:21,880
它一定有嘛

605
00:21:21,880 --> 00:21:24,320
 所以你就你就選了其中一個

606
00:21:24,320 --> 00:21:26,320
譬如說就是對方那一頭

607
00:21:26,320 --> 00:21:28,400
叫做 w 的這一段 edge

608
00:21:28,400 --> 00:21:30,320
好 既然連到這邊呢

609
00:21:30,320 --> 00:21:32,200
我現在我現在 point 我就

610
00:21:32,200 --> 00:21:34,200
不要看這個 u 了啦

611
00:21:34,200 --> 00:21:35,680
我現在 point 就跑到

612
00:21:35,680 --> 00:21:37,120
這個 w 去了啦

613
00:21:37,120 --> 00:21:39,960
我現在是故意用放慢速度在講 

614
00:21:39,960 --> 00:21:41,800
其實這個大家不要太遷就說

615
00:21:41,800 --> 00:21:42,840
好像一定要去

616
00:21:42,840 --> 00:21:45,040
完全理解老師這邊的字句 

617
00:21:45,040 --> 00:21:46,360
就是你你其實是

618
00:21:46,360 --> 00:21:48,640
概念上大概理解就好 

619
00:21:48,640 --> 00:21:50,200
 概念上的理解大概就是

620
00:21:50,200 --> 00:21:52,200
我先從我的起點出發

621
00:21:52,200 --> 00:21:54,760
然後就是去找跟起點相連的某一個

622
00:21:54,760 --> 00:21:57,000
其它的點 

623
00:21:57,000 --> 00:21:59,720
 因為這一定就是一個 edge 嘛

624
00:21:59,720 --> 00:22:01,440
好 只要這個 edge 是

625
00:22:01,440 --> 00:22:02,440
你還沒有走過的 edge

626
00:22:02,440 --> 00:22:04,040
你就去把它納入考量

627
00:22:04,040 --> 00:22:05,480
然後你就

628
00:22:05,480 --> 00:22:08,000
重心就會從你當下這個點

629
00:22:08,000 --> 00:22:09,440
經由你先

630
00:22:09,440 --> 00:22:11,360
把它納入考量這個 edge

631
00:22:11,360 --> 00:22:14,160
而把你現在的焦點放在

632
00:22:14,160 --> 00:22:15,760
對方那一頭的點

633
00:22:15,760 --> 00:22:18,200
好我現在就是白話來講

634
00:22:18,280 --> 00:22:19,240
就是這個意思了

635
00:22:19,240 --> 00:22:21,520
ok 好 

636
00:22:21,520 --> 00:22:22,320
然後呢

637
00:22:22,320 --> 00:22:24,440
然後就是你剛才已經經過了這一段

638
00:22:24,440 --> 00:22:26,160
你就可以把它刪掉了

639
00:22:26,160 --> 00:22:28,880
好有點類似那個 過河拆橋 那個概念

640
00:22:28,880 --> 00:22:30,320
好 為什麼這樣？

641
00:22:30,320 --> 00:22:33,040
因為我們規定 Euler circuit

642
00:22:33,040 --> 00:22:34,800
你的 edge 不可以重複經過嘛

643
00:22:34,800 --> 00:22:36,120
所以你等一下刪掉

644
00:22:36,120 --> 00:22:37,760
你等一下就不會重複經過了

645
00:22:37,760 --> 00:22:39,440
因為已經被你刪掉了

646
00:22:39,440 --> 00:22:40,560
ok 好

647
00:22:40,560 --> 00:22:43,040
所以你再來就等同於

648
00:22:43,040 --> 00:22:45,120
在重複剛才的這件事情

649
00:22:45,120 --> 00:22:47,520
只不過我從這個 w 出發

650
00:22:47,600 --> 00:22:48,200
什麼意思? 

651
00:22:48,200 --> 00:22:48,880
也就是

652
00:22:48,880 --> 00:22:51,560
我現在如果刪掉 我就把它畫個 x

653
00:22:51,560 --> 00:22:55,440
也就是請找出跟 w 相連

654
00:22:55,440 --> 00:22:57,600
 你還沒有走過的 edge

655
00:22:57,600 --> 00:22:59,480
請問有沒有哪一條存在呢? 

656
00:22:59,480 --> 00:23:01,400
 保證有! 為什麼保證有?

657
00:23:01,400 --> 00:23:04,280
因為我們的 degree 是 even

658
00:23:04,280 --> 00:23:05,960
所以我們剛才進到 w

659
00:23:05,960 --> 00:23:07,520
是由一條進來的

660
00:23:07,520 --> 00:23:09,440
你勢必一定可以找到一條出去

661
00:23:09,440 --> 00:23:10,840
要不然它怎麼會 even ? 

662
00:23:10,840 --> 00:23:12,120
好 ok

663
00:23:12,120 --> 00:23:14,480
可能會有同學會考慮到說老師

664
00:23:14,480 --> 00:23:16,560
那個 偶數呢

665
00:23:16,720 --> 00:23:19,000
 當然我們知道24680是偶數

666
00:23:19,000 --> 00:23:20,280
可是0也是偶數 

667
00:23:20,280 --> 00:23:21,960
  萬一它是0呢

668
00:23:21,960 --> 00:23:23,560
哦? 不會！ 為什麼？

669
00:23:23,560 --> 00:23:25,160
因為如果它是0的話

670
00:23:25,160 --> 00:23:26,880
它就沒有 connected

671
00:23:26,880 --> 00:23:28,520
然後記住我們最開始

672
00:23:28,520 --> 00:23:30,240
的開宗明義的假設

673
00:23:30,240 --> 00:23:32,160
我們就有講 connected 的圖

674
00:23:32,160 --> 00:23:35,160
好所以不可能會有某一個 vertex

675
00:23:35,160 --> 00:23:37,920
它的 degree 是0這樣的偶數

676
00:23:37,920 --> 00:23:39,000
因為如果有的話

677
00:23:39,000 --> 00:23:40,920
它就是沒有 connected

678
00:23:40,920 --> 00:23:43,040
 就違反了我們的假設

679
00:23:43,040 --> 00:23:44,120
好好

680
00:23:44,120 --> 00:23:46,040
老師剛才是試圖把各位有可能

681
00:23:46,040 --> 00:23:47,800
的疑慮 我就一併這樣講 

682
00:23:47,800 --> 00:23:49,080
 如果講的比較快

683
00:23:49,080 --> 00:23:50,160
簡單講就是

684
00:23:50,160 --> 00:23:51,680
我從一個點出發

685
00:23:51,680 --> 00:23:53,320
然後去找它有哪一個 edge

686
00:23:53,320 --> 00:23:54,400
還沒有走過的

687
00:23:54,400 --> 00:23:55,280
它就去走 

688
00:23:55,280 --> 00:23:56,960
反正一走了 它就把它刪掉了

689
00:23:56,960 --> 00:23:58,800
好 然後 它就到另外一個點

690
00:23:58,800 --> 00:24:00,760
然後就重複剛才那件事情什麼事

691
00:24:00,760 --> 00:24:01,640
就站在這個點

692
00:24:01,640 --> 00:24:03,640
請問有沒有哪一個 edge 是還沒走過的

693
00:24:03,640 --> 00:24:04,360
哦有

694
00:24:04,360 --> 00:24:06,920
一定有因為是 degree 是 even 嘛

695
00:24:06,920 --> 00:24:09,560
好  你就再出發再到它的下一個點

696
00:24:09,560 --> 00:24:11,680
好然後再把它過了拆掉

697
00:24:11,680 --> 00:24:12,880
然後請問在這個點

698
00:24:12,880 --> 00:24:14,680
我們過去也稱為 double prime

699
00:24:14,880 --> 00:24:16,160
有沒有跟它相鄰的

700
00:24:16,160 --> 00:24:16,880
另外一個 edge

701
00:24:16,880 --> 00:24:18,320
一定有因為一進一出

702
00:24:18,320 --> 00:24:19,480
好所以你就可以這樣子

703
00:24:19,480 --> 00:24:21,280
一直出去 一直出去 一直出去

704
00:24:21,280 --> 00:24:22,600
一直出去 一直出去

705
00:24:22,600 --> 00:24:24,560
有沒有可能回到剛才經過一個點？

706
00:24:24,560 --> 00:24:25,520
有可能

707
00:24:25,520 --> 00:24:26,480
但，有差嗎？

708
00:24:26,480 --> 00:24:27,360
沒差！

709
00:24:27,360 --> 00:24:29,680
好 你如果進來，會不會出去？

710
00:24:29,680 --> 00:24:30,840
不會！為什麼？

711
00:24:30,840 --> 00:24:32,000
因為 一進一出 嘛

712
00:24:32,000 --> 00:24:33,400
所以它一定一定會

713
00:24:33,400 --> 00:24:34,360
一定會這樣子

714
00:24:34,360 --> 00:24:35,640
好 這就是我說的

715
00:24:35,640 --> 00:24:36,960
有朝一日 你一定會回來

716
00:24:36,960 --> 00:24:37,520
嘿嘿嘿

717
00:24:37,520 --> 00:24:39,000
ok 好

718
00:24:39,000 --> 00:24:39,640
所以

719
00:24:39,640 --> 00:24:40,960
後面的講的這一堆

720
00:24:40,960 --> 00:24:43,080
就簡單講概念上執行上

721
00:24:43,080 --> 00:24:45,120
就是我剛才的這種做法了

722
00:24:45,120 --> 00:24:45,600
好

723
00:24:45,600 --> 00:24:46,200
嘿

724
00:24:46,200 --> 00:24:48,720
也就是你每做一次

725
00:24:48,720 --> 00:24:51,200
就是移動一個 edge

726
00:24:51,200 --> 00:24:52,840
你就刪除那個 edge

727
00:24:52,840 --> 00:24:53,440
好

728
00:24:53,440 --> 00:24:56,120
 你的 edge 越來越少

729
00:24:56,120 --> 00:24:58,360
有朝一日你一定會沒有 edge

730
00:24:58,360 --> 00:24:59,640
可以給你刪了啦

731
00:24:59,640 --> 00:25:03,560
好  種情況就是你要結束的情況

732
00:25:03,560 --> 00:25:06,160
好 當然我我這邊舉的例是

733
00:25:06,160 --> 00:25:07,840
大家都可以串在一起的

734
00:25:07,840 --> 00:25:09,800
 我剛才一開始也故意舉一個例

735
00:25:09,800 --> 00:25:11,560
讓你好像會串不在一起

736
00:25:11,560 --> 00:25:13,040
我再很快地講一次

737
00:25:13,040 --> 00:25:15,640
舉例來講 我從 a 出發

738
00:25:15,640 --> 00:25:17,280
然後..

739
00:25:17,280 --> 00:25:19,400
 不然我從 b 出發也可以的

740
00:25:19,400 --> 00:25:20,440
從 b 出發

741
00:25:20,440 --> 00:25:22,080
然後 我是不是走這一條

742
00:25:22,080 --> 00:25:23,400
然後是不是就被我刪掉了

743
00:25:23,400 --> 00:25:23,920
對不對？

744
00:25:23,920 --> 00:25:27,000
然後 我我可以走這三條任意一條

745
00:25:27,000 --> 00:25:28,160
請問你要走哪一條？

746
00:25:28,160 --> 00:25:30,600
好 比如說我就故意在走這一條

747
00:25:30,600 --> 00:25:31,840
是不是它要刪掉了

748
00:25:31,840 --> 00:25:32,480
哇

749
00:25:32,480 --> 00:25:34,640
這個時候就出不去了，該怎麼辦？

750
00:25:34,640 --> 00:25:37,080
好 如果你按照剛才的說法

751
00:25:37,080 --> 00:25:38,040
看起來是這樣

752
00:25:38,040 --> 00:25:40,240
可是你如果再仔細去看

753
00:25:40,520 --> 00:25:41,680
我的那個演算法

754
00:25:41,680 --> 00:25:42,760
它其實不是

755
00:25:42,760 --> 00:25:44,720
這麼單純在講這個意思

756
00:25:44,720 --> 00:25:45,960
它其實講的是說

757
00:25:45,960 --> 00:25:48,800
請把剛才你有走過的

758
00:25:48,800 --> 00:25:50,360
  些線段

759
00:25:50,360 --> 00:25:52,760
好 如果以目前我走過的呢

760
00:25:52,760 --> 00:25:54,160
就是這些紅色線段

761
00:25:54,160 --> 00:25:57,440
好 它有 touch 到的點

762
00:25:57,440 --> 00:25:59,080
好 如果以我目前

763
00:25:59,080 --> 00:26:01,200
所做的 剛好就是 a 跟 b 嘛

764
00:26:01,200 --> 00:26:03,400
有沒有可以找到哪些 edge

765
00:26:03,400 --> 00:26:04,480
跟這些點

766
00:26:04,480 --> 00:26:06,600
有相鄰

767
00:26:06,600 --> 00:26:08,160
而你還沒走的？

768
00:26:08,680 --> 00:26:10,520
它其實裡面

769
00:26:10,520 --> 00:26:13,120
主要有這樣的一個過程

770
00:26:13,120 --> 00:26:15,840
好 如果照這樣來檢驗的話

771
00:26:15,840 --> 00:26:18,600
 你就不會被困惑在

772
00:26:18,600 --> 00:26:20,240
 老師，我現在回到 b

773
00:26:20,240 --> 00:26:21,520
然後我就出不去.. 不會！

774
00:26:21,520 --> 00:26:23,320
為什麼？因為你要把它想成

775
00:26:23,320 --> 00:26:25,520
剛才被我 touch 過的這兩個點

776
00:26:25,520 --> 00:26:26,240
a 跟 b

777
00:26:26,240 --> 00:26:29,120
有沒有其它的 edge 是黑色的

778
00:26:29,120 --> 00:26:31,040
還沒有跟 a 跟 b

779
00:26:31,040 --> 00:26:31,960
touch 到的edge？

780
00:26:31,960 --> 00:26:32,680
有! 

781
00:26:32,680 --> 00:26:34,840
就是說可以 touch 還沒 touch 的

782
00:26:34,840 --> 00:26:36,160
有! 這兩條不就是? 

783
00:26:36,920 --> 00:26:39,040
也就是 (A,D) 跟 (A,C) 就是嘛

784
00:26:39,040 --> 00:26:41,280
好 所以在 種情況呢

785
00:26:41,280 --> 00:26:42,960
它你如果仔細看

786
00:26:42,960 --> 00:26:45,080
對照那個演算法

787
00:26:45,080 --> 00:26:46,040
它概念就是

788
00:26:46,040 --> 00:26:48,000
 如果是這種情況呢

789
00:26:48,000 --> 00:26:49,280
好 你就

790
00:26:49,280 --> 00:26:50,000
 

791
00:26:50,000 --> 00:26:52,200
直覺上 

792
00:26:52,200 --> 00:26:53,440
就是你就選

793
00:26:53,440 --> 00:26:54,480
這個 A  

794
00:26:54,480 --> 00:26:56,280
因為就是 A 來跟它們連了嘛

795
00:26:56,280 --> 00:26:57,720
然後再從 A 出發

796
00:26:57,720 --> 00:26:59,280
好然後你再去走

797
00:26:59,280 --> 00:27:01,040
好走到這邊

798
00:27:01,040 --> 00:27:01,960
然後呢

799
00:27:01,960 --> 00:27:03,080
當然你如果

800
00:27:03,080 --> 00:27:05,640
偷看答案的話就是這樣走嘛

801
00:27:05,720 --> 00:27:06,840
 如果你不要偷看答案

802
00:27:06,840 --> 00:27:08,400
你就又故意這樣走回來

803
00:27:08,400 --> 00:27:10,000
哇感覺又走不出去了

804
00:27:10,000 --> 00:27:10,520
對不對? 

805
00:27:10,520 --> 00:27:11,280
嘿

806
00:27:11,280 --> 00:27:12,240
 

807
00:27:12,240 --> 00:27:14,320
可是 按照老師剛才的說法

808
00:27:14,320 --> 00:27:16,760
現在就是被我 touch 過的這些

809
00:27:16,760 --> 00:27:18,840
 點 就是我這邊 紅色點

810
00:27:18,840 --> 00:27:20,480
所構成的集合 就這樣嘛

811
00:27:20,480 --> 00:27:20,960
對不對？

812
00:27:20,960 --> 00:27:23,440
好然後請問現在還沒有哪一條

813
00:27:23,440 --> 00:27:24,120
edge

814
00:27:24,120 --> 00:27:25,480
edge 哦

815
00:27:25,480 --> 00:27:27,560
好它的一頭是 紅

816
00:27:27,560 --> 00:27:28,880
一頭是 黑

817
00:27:28,880 --> 00:27:29,640
好

818
00:27:29,640 --> 00:27:32,760
有！ 就是這一條或這一條

819
00:27:32,760 --> 00:27:33,800
好 如果有的話

820
00:27:33,800 --> 00:27:35,560
哦就.. 把那個 紅 的那個點

821
00:27:35,560 --> 00:27:36,960
當你新的 起點

822
00:27:36,960 --> 00:27:38,520
好 然後

823
00:27:38,520 --> 00:27:39,880
看你要怎麼走都可以 

824
00:27:39,880 --> 00:27:40,520
 這樣

825
00:27:40,520 --> 00:27:42,640
請問現在是不是所有 edge 都走完了？

826
00:27:42,640 --> 00:27:43,080
是！

827
00:27:43,080 --> 00:27:44,960
然後就結束了

828
00:27:44,960 --> 00:27:47,480
好 可是當然我們剛才過程當中

829
00:27:47,480 --> 00:27:49,440
如果依我剛才的順序的話

830
00:27:49,440 --> 00:27:51,800
好我剛才順序的話我得到的是

831
00:27:51,800 --> 00:27:52,800
這樣的順序

832
00:27:52,800 --> 00:27:53,480
B

833
00:27:53,480 --> 00:27:54,840
A

834
00:27:54,840 --> 00:27:56,360
B 對不對? 

835
00:27:56,360 --> 00:27:57,760
好因為我先把這個走完

836
00:27:57,760 --> 00:27:59,920
然後再來我就從 A 再出發

837
00:27:59,920 --> 00:28:00,400
 

838
00:28:00,400 --> 00:28:01,160
A

839
00:28:01,160 --> 00:28:02,200
D

840
00:28:02,680 --> 00:28:04,440
E C A

841
00:28:04,440 --> 00:28:05,960
哦我剛才是這樣嘛

842
00:28:05,960 --> 00:28:06,440
對不對

843
00:28:06,440 --> 00:28:08,240
然後我再再從 C 出發

844
00:28:08,240 --> 00:28:11,400
C G F C

845
00:28:11,400 --> 00:28:12,320
大概是這樣嘛

846
00:28:12,320 --> 00:28:14,720
好也就是我得到三個 cycle

847
00:28:14,720 --> 00:28:16,680
然後我現在其實就是要試圖..

848
00:28:16,680 --> 00:28:19,040
這..個其實要做一些

849
00:28:19,040 --> 00:28:20,440
做一些

850
00:28:20,440 --> 00:28:21,200
嗯

851
00:28:21,200 --> 00:28:23,600
額外的工作 把它串起來

852
00:28:23,600 --> 00:28:25,440
就是我們現在已經實際上做完了

853
00:28:25,440 --> 00:28:26,160
只是說

854
00:28:26,160 --> 00:28:28,600
 要把它串的比較順

855
00:28:28,600 --> 00:28:30,800
好 你要怎麼串? 這樣子

856
00:28:30,920 --> 00:28:33,280
好ok 那個串法呢? 

857
00:28:33,280 --> 00:28:35,480
就是如老師所說的

858
00:28:35,480 --> 00:28:38,560
你就把它當成 你

859
00:28:38,560 --> 00:28:40,920
前面的這一串

860
00:28:40,920 --> 00:28:42,720
是一個 展開

861
00:28:42,720 --> 00:28:46,320
你遇到這邊呢? 這一串是一個展開

862
00:28:46,320 --> 00:28:48,040
這樣的概念

863
00:28:48,040 --> 00:28:49,400
這樣來理解

864
00:28:49,400 --> 00:28:50,840
什麼意思? 來

865
00:28:50,840 --> 00:28:54,000
我們現在如果照我剛才那個走法

866
00:28:54,000 --> 00:28:56,640
看起來好像是分別的 三個cycle

867
00:28:56,640 --> 00:28:57,200
對不對? 

868
00:28:57,200 --> 00:28:58,920
好 我現在

869
00:28:58,920 --> 00:29:00,400
我現在就是

870
00:29:00,720 --> 00:29:02,240
把它對齊的話

871
00:29:02,240 --> 00:29:04,160
然後我就走一次給大家看

872
00:29:04,160 --> 00:29:06,400
來我現在呢其實是可以這樣

873
00:29:06,400 --> 00:29:07,320
B

874
00:29:07,320 --> 00:29:10,920
走到 A 的時候我先不急著回 B

875
00:29:10,920 --> 00:29:14,520
我先把 A 所在的這一整串給它走完

876
00:29:14,520 --> 00:29:16,520
什麼叫做 A 所在這一整串？

877
00:29:16,520 --> 00:29:18,120
A所在的這一整串就是

878
00:29:18,120 --> 00:29:21,000
a d c e c
A   D C E C
879
00:29:21,000 --> 00:29:23,480
哦然後遇到了 C 呢

880
00:29:23,480 --> 00:29:25,280
我先不要急著回 A

881
00:29:25,280 --> 00:29:26,680
我再把 C 所

882
00:29:26,680 --> 00:29:28,440
串的那一整串再走完

883
00:29:28,600 --> 00:29:30,720
所以我剛才就是 A D E ｃ

884
00:29:30,720 --> 00:29:31,320
然後

885
00:29:31,320 --> 00:29:33,480
c g f c

886
00:29:33,480 --> 00:29:35,720
回到了c終於把c這一串走完了

887
00:29:35,720 --> 00:29:37,200
我再把a這一串走完

888
00:29:37,200 --> 00:29:38,760
然後把a這一串走完之後

889
00:29:38,760 --> 00:29:41,080
我再回過頭來到上一層去走b

890
00:29:41,080 --> 00:29:43,840
這樣就解決了

891
00:29:43,840 --> 00:29:46,360
好也就是剛才看起來好像

892
00:29:46,360 --> 00:29:47,800
有三個

893
00:29:47,800 --> 00:29:50,880
拆開的side

894
00:29:50,880 --> 00:29:52,640
可是你可以用

895
00:29:52,640 --> 00:29:55,040
剛才我所講的這個方式就把它串起來

896
00:29:55,040 --> 00:29:57,720
當然我現在講的方式是用

897
00:29:58,240 --> 00:29:58,760
這種

898
00:29:58,760 --> 00:30:01,120
圖形

899
00:30:01,120 --> 00:30:03,400
然後用這個例子來解讀

900
00:30:03,400 --> 00:30:06,760
 你如果實際要把它寫成程式的話

901
00:30:06,760 --> 00:30:10,160
的確是要花一點時間來處理

902
00:30:10,160 --> 00:30:11,760
因為這個會牽涉到

903
00:30:11,760 --> 00:30:13,600
recursive的概念

904
00:30:13,600 --> 00:30:16,160
recursive就是會有遞回

905
00:30:16,160 --> 00:30:19,880
想像一下這就是我遇到了a

906
00:30:19,880 --> 00:30:21,720
然後要把a的這一串弄完

907
00:30:21,720 --> 00:30:24,320
然後在a的這一串裡面它又遇到了c

908
00:30:24,320 --> 00:30:25,560
要把c這一串弄完

909
00:30:25,560 --> 00:30:27,760
這就是我說的遇到遞回的概念了

910
00:30:28,760 --> 00:30:29,680
所以這個如果

911
00:30:29,680 --> 00:30:31,280
要寫成是

912
00:30:31,280 --> 00:30:34,760
這個要花一點功夫去處理它

913
00:30:34,760 --> 00:30:37,440
不過這是可以解決的

914
00:30:37,440 --> 00:30:38,320
只不過

915
00:30:38,320 --> 00:30:40,280
對大部分的人來講

916
00:30:40,280 --> 00:30:41,120
會有

917
00:30:41,120 --> 00:30:43,000
真的要你把它寫成程式

918
00:30:43,000 --> 00:30:44,480
還是可能會有點困難

919
00:30:44,480 --> 00:30:46,720
不過以我們這門課

920
00:30:46,720 --> 00:30:47,760
起碼

921
00:30:47,760 --> 00:30:50,520
你先理解到概念上

922
00:30:50,520 --> 00:30:52,160
是沒有困難來理解

923
00:30:52,160 --> 00:30:54,000
展開這件事情的

924
00:30:54,000 --> 00:30:56,920
所以我們主要要確認這件事情

925
00:30:57,840 --> 00:31:01,000
 如果我剛才這樣講的理解的話

926
00:31:01,000 --> 00:31:02,520
 我們等同於

927
00:31:02,520 --> 00:31:03,800
Euler's circuit algorithm

928
00:31:03,800 --> 00:31:04,840
我們就講完了

929
00:31:04,840 --> 00:31:06,680
然後在這個algorithm

930
00:31:06,680 --> 00:31:08,080
它所花的時間

931
00:31:08,080 --> 00:31:10,320
我也寫在這邊了

932
00:31:10,320 --> 00:31:12,360
就跟你的edge個數

933
00:31:12,360 --> 00:31:13,880
是呈正相關

934
00:31:13,880 --> 00:31:17,760
原因就是它每走過一條

935
00:31:17,760 --> 00:31:19,320
它就刪掉那一條

936
00:31:19,320 --> 00:31:20,760
 你每刪一次

937
00:31:20,760 --> 00:31:22,560
 你就繼續走再刪

938
00:31:22,560 --> 00:31:23,520
再走再刪

939
00:31:23,520 --> 00:31:26,520
 所以我們可以想像總共會有

940
00:31:26,720 --> 00:31:28,400
m的一次方的回合

941
00:31:28,400 --> 00:31:31,440
m代表number of edge

942
00:31:31,440 --> 00:31:32,720
ok

943
00:31:32,720 --> 00:31:35,560
 有沒有可能這個m的一次方裡面

944
00:31:35,560 --> 00:31:36,680
還有含一些東西

945
00:31:36,680 --> 00:31:37,440
因為通常

946
00:31:37,440 --> 00:31:38,320
如果

947
00:31:38,320 --> 00:31:40,560
那個演算法會比較複雜

948
00:31:40,560 --> 00:31:43,080
就是它一層裡面還包一層還包一層

949
00:31:43,080 --> 00:31:43,440
所以

950
00:31:43,440 --> 00:31:47,000
所以就不是 麼單純是m的一次方

951
00:31:47,000 --> 00:31:49,280
 以這個情況是沒有的

952
00:31:49,280 --> 00:31:50,440
ok

953
00:31:50,440 --> 00:31:53,160
 因為它其實重點就在於

954
00:31:53,160 --> 00:31:54,320
它不會重複經過

955
00:31:55,760 --> 00:31:58,040
雖然我剛才在解釋那個recursive的感覺

956
00:31:58,040 --> 00:31:59,240
有點小複雜

957
00:31:59,240 --> 00:32:00,560
可是你在仔細給它看

958
00:32:00,560 --> 00:32:02,840
我那個過程你如果根據這樣展開

959
00:32:02,840 --> 00:32:04,560
它當然是每一段edge

960
00:32:04,560 --> 00:32:05,760
只會被你count一次

961
00:32:05,760 --> 00:32:07,320
然後它不會double count

962
00:32:07,320 --> 00:32:07,800
好

963
00:32:07,800 --> 00:32:10,280
所以我們剛才講說所有的

964
00:32:10,280 --> 00:32:11,720
 我們可以理解每

965
00:32:11,720 --> 00:32:13,680
走過一條edge把它刪除

966
00:32:13,680 --> 00:32:15,840
然後從剛才那個展開過程

967
00:32:15,840 --> 00:32:16,960
其實也可以

968
00:32:16,960 --> 00:32:17,920
mapping到

969
00:32:17,920 --> 00:32:19,080
 每一個edge

970
00:32:19,080 --> 00:32:21,000
其實真的也只會被你檢查一次

971
00:32:21,000 --> 00:32:23,040
它不會被你重複檢查我經過

972
00:32:23,040 --> 00:32:23,440
好

973
00:32:23,560 --> 00:32:26,480
 所以從頭到尾所花的總時間

974
00:32:26,480 --> 00:32:27,320
好

975
00:32:27,320 --> 00:32:29,720
就會跟你的m的一次方成正比

976
00:32:29,720 --> 00:32:31,520
ok

977
00:32:31,520 --> 00:32:32,160
所以

978
00:32:32,160 --> 00:32:34,320
整個在總整

979
00:32:34,320 --> 00:32:35,960
給你一個圖

980
00:32:35,960 --> 00:32:40,560
首先你如何判斷它是否有Euler circuit

981
00:32:40,560 --> 00:32:41,680
或Euler path

982
00:32:41,680 --> 00:32:43,800
 這個我們也解釋過了

983
00:32:43,800 --> 00:32:45,400
答案

984
00:32:45,400 --> 00:32:46,800
你就可以從

985
00:32:46,800 --> 00:32:48,320
它的

986
00:32:48,320 --> 00:32:50,880
vertex degree來檢查

987
00:32:50,880 --> 00:32:52,040
激素或偶數

988
00:32:52,200 --> 00:32:53,080
 這件事情

989
00:32:53,080 --> 00:32:55,480
花的時間大概是m的一次方

990
00:32:55,480 --> 00:32:58,280
假設你的degree已知

991
00:32:58,280 --> 00:33:00,560
假設degree已知

992
00:33:00,560 --> 00:33:01,160
好

993
00:33:01,160 --> 00:33:01,920
好

994
00:33:01,920 --> 00:33:02,640
然後

995
00:33:02,640 --> 00:33:05,360
你現在確認它有了的話

996
00:33:05,360 --> 00:33:08,320
請把那個Euler path或circuit

997
00:33:08,320 --> 00:33:09,840
請給我畫出來

998
00:33:09,840 --> 00:33:11,040
這件事情

999
00:33:11,040 --> 00:33:12,080
就要用到

1000
00:33:12,080 --> 00:33:14,520
Euler circuit algorithm

1001
00:33:14,520 --> 00:33:15,600
來處理

1002
00:33:15,600 --> 00:33:18,280
Euler circuit algorithm所花的時間是

1003
00:33:18,280 --> 00:33:19,600
m的一次方

1004
00:33:19,600 --> 00:33:20,720
可以處理

1005
00:33:20,720 --> 00:33:21,840
ok

1006
00:33:22,120 --> 00:33:22,440
好

1007
00:33:22,440 --> 00:33:25,840
所以不管是前面的n的一次方

1008
00:33:25,840 --> 00:33:26,760
來偵測

1009
00:33:26,760 --> 00:33:27,680
或者是

1010
00:33:27,680 --> 00:33:30,080
m的一次方真的把這個

1011
00:33:30,080 --> 00:33:31,680
Euler circuit把它做出來

1012
00:33:31,680 --> 00:33:32,960
無論如何

1013
00:33:32,960 --> 00:33:35,080
它都是我們稱之為

1014
00:33:35,080 --> 00:33:36,680
linear time

1015
00:33:36,680 --> 00:33:39,560
也就是跟你的n的一次方

1016
00:33:39,560 --> 00:33:41,760
還有m的一次方是成正比的

1017
00:33:41,760 --> 00:33:44,680
所以請問是不是polynomial time

1018
00:33:44,680 --> 00:33:46,120
當然是

1019
00:33:46,120 --> 00:33:48,080
因為因為這是線性的線性

1020
00:33:48,080 --> 00:33:49,320
就是一個多項式

1021
00:33:49,320 --> 00:33:50,560
函數 

1022
00:33:50,880 --> 00:33:51,920
它只是一次方而已

1023
00:33:51,920 --> 00:33:53,960
所以這樣好不好

1024
00:33:53,960 --> 00:33:54,480
好

1025
00:33:54,480 --> 00:33:55,800
這樣有沒有效率

1026
00:33:55,800 --> 00:33:56,600
有效率

1027
00:33:56,600 --> 00:34:00,160
剛才我們都是基於

1028
00:34:00,160 --> 00:34:01,400
我們的degree已知

1029
00:34:01,400 --> 00:34:03,840
degree已知

1030
00:34:03,840 --> 00:34:04,360
對不對

1031
00:34:04,360 --> 00:34:06,640
請問如果degree未知呢

1032
00:34:06,640 --> 00:34:07,840
怎麼辦

1033
00:34:07,840 --> 00:34:10,560
如果degree未知

1034
00:34:10,560 --> 00:34:11,960
我們就要去算degree

1035
00:34:11,960 --> 00:34:14,160
請問你的degree要怎麼算

1036
00:34:14,160 --> 00:34:15,840
ok

1037
00:34:15,840 --> 00:34:18,240
其實就會牽涉到

1038
00:34:18,240 --> 00:34:20,160
前面講過的

1039
00:34:20,640 --> 00:34:22,200
資料結構的概念

1040
00:34:22,200 --> 00:34:26,040
我們前面在講Euler circuit

1041
00:34:26,040 --> 00:34:27,040
沒有我們最

1042
00:34:27,040 --> 00:34:28,040
開始在講

1043
00:34:28,040 --> 00:34:30,720
如何去把一個圖儲存

1044
00:34:30,720 --> 00:34:31,360
我們有

1045
00:34:31,360 --> 00:34:32,200
講過

1046
00:34:32,200 --> 00:34:33,840
adjacency matrix

1047
00:34:33,840 --> 00:34:35,360
跟adjacency list

1048
00:34:35,360 --> 00:34:36,360
的概念

1049
00:34:36,360 --> 00:34:40,640
好我如果存的是adjacency matrix

1050
00:34:40,640 --> 00:34:42,000
請把

1051
00:34:42,000 --> 00:34:44,120
每個vertex的degree

1052
00:34:44,120 --> 00:34:45,160
算出來

1053
00:34:45,160 --> 00:34:47,440
請問你會花多少時間

1054
00:34:47,440 --> 00:34:50,360
 當然我們都可以理解

1055
00:34:51,280 --> 00:34:52,840
它的degree其實就是

1056
00:34:52,840 --> 00:34:54,000
我這個raw

1057
00:34:54,000 --> 00:34:55,400
它有幾個1算出來

1058
00:34:55,400 --> 00:34:56,840
就是degree of 1

1059
00:34:56,840 --> 00:34:58,160
就是1的degree

1060
00:34:58,160 --> 00:34:59,200
第一個row

1061
00:34:59,200 --> 00:35:00,280
第二個row

1062
00:35:00,280 --> 00:35:00,920
degree2

1063
00:35:00,920 --> 00:35:02,120
degree3

1064
00:35:02,120 --> 00:35:03,160
degree4

1065
00:35:03,160 --> 00:35:03,800
對不對

1066
00:35:03,800 --> 00:35:05,720
請問這件事要花多少時間

1067
00:35:05,720 --> 00:35:09,480
我們就看這裡有幾項

1068
00:35:09,480 --> 00:35:10,880
答案就n項

1069
00:35:10,880 --> 00:35:12,000
然後這裡有幾項

1070
00:35:12,000 --> 00:35:12,840
答案就n項

1071
00:35:12,840 --> 00:35:15,000
所以我們用兩個for loop

1072
00:35:15,000 --> 00:35:17,760
for i從1到n

1073
00:35:17,760 --> 00:35:19,400
然後你去計算說

1074
00:35:19,440 --> 00:35:20,120
只要是1的

1075
00:35:20,120 --> 00:35:21,160
我就把它累計

1076
00:35:21,160 --> 00:35:24,280
 你就可以得到degree i++

1077
00:35:24,280 --> 00:35:25,840
就是假設我現在degree

1078
00:35:25,840 --> 00:35:26,480
i

1079
00:35:26,480 --> 00:35:28,240
先reset等於0

1080
00:35:28,240 --> 00:35:30,160
 我這個我就可以知道

1081
00:35:30,160 --> 00:35:31,360
degree i

1082
00:35:31,360 --> 00:35:34,640
其實我現在寫的不完全對

1083
00:35:34,640 --> 00:35:36,800
因為因為我這寫的

1084
00:35:36,800 --> 00:35:39,200
我現在寫的其實是錯了

1085
00:35:39,200 --> 00:35:41,560
我現在寫的應該是要去講說

1086
00:35:41,560 --> 00:35:44,160
我如果下去講degree i的話

1087
00:35:44,160 --> 00:35:45,280
要怎麼算

1088
00:35:45,280 --> 00:35:46,640
其實是degree i

1089
00:35:46,640 --> 00:35:48,600
還要用另外一個for loop

1090
00:35:49,240 --> 00:35:50,600
我現在講的太快了

1091
00:35:50,600 --> 00:35:51,800
我現在這個外層的

1092
00:35:51,800 --> 00:35:53,400
其實是在講外面

1093
00:35:53,400 --> 00:35:54,080
我

1094
00:35:54,080 --> 00:35:55,840
每一個row要做一次

1095
00:35:55,840 --> 00:35:57,440
總共n個row就要做n次

1096
00:35:57,440 --> 00:35:59,600
然後再來應該有一個內層的

1097
00:35:59,600 --> 00:36:01,880
是for j=1到n

1098
00:36:01,880 --> 00:36:04,480
通常我們都會習慣i是row

1099
00:36:04,480 --> 00:36:05,800
j是column

1100
00:36:05,800 --> 00:36:06,400
這樣子

1101
00:36:06,400 --> 00:36:10,360
 我現在要去看這個row有幾個1

1102
00:36:10,360 --> 00:36:12,400
 你就是要去看

1103
00:36:12,400 --> 00:36:14,120
就是把它加總起來

1104
00:36:14,120 --> 00:36:17,360
也就是我們可以知道degree i

1105
00:36:17,800 --> 00:36:21,280
加就等於adjacency matrix

1106
00:36:21,280 --> 00:36:22,640
的ij

1107
00:36:22,640 --> 00:36:24,400
我們如果稱之為這個ij

1108
00:36:24,400 --> 00:36:26,120
它如果是1

1109
00:36:26,120 --> 00:36:27,160
就是會累加

1110
00:36:27,160 --> 00:36:28,720
如果是0就不會累加

1111
00:36:28,720 --> 00:36:29,640
是不是

1112
00:36:29,640 --> 00:36:31,960
我很快地寫這條式子

1113
00:36:31,960 --> 00:36:34,440
 這樣子我是不是

1114
00:36:34,440 --> 00:36:35,760
就是兩個for loop

1115
00:36:35,760 --> 00:36:37,880
就可以把每個vertex

1116
00:36:37,880 --> 00:36:39,600
的degree就算出來了

1117
00:36:39,600 --> 00:36:40,360
對吧

1118
00:36:40,360 --> 00:36:41,760
 請問這樣花多少時間

1119
00:36:41,760 --> 00:36:43,400
答案n平方的時間

1120
00:36:43,400 --> 00:36:46,920
n平方的時間可以把所有的

1121
00:36:47,040 --> 00:36:48,680
vertex degree算出來

1122
00:36:48,680 --> 00:36:51,000
如果是只有某一個vertex i呢

1123
00:36:51,000 --> 00:36:52,760
答案就是n的一次方

1124
00:36:52,760 --> 00:36:55,520
因為它就是某一個i

1125
00:36:55,520 --> 00:36:57,840
它就是把它的那個j

1126
00:36:57,840 --> 00:37:02,040
就是這個column通加總

1127
00:37:02,040 --> 00:37:03,400
就知道了

1128
00:37:03,400 --> 00:37:05,920
所以如果我只要某一個i

1129
00:37:05,920 --> 00:37:06,800
的degree

1130
00:37:06,800 --> 00:37:08,000
它是n的一次方

1131
00:37:08,000 --> 00:37:09,960
如果我要所有的i

1132
00:37:09,960 --> 00:37:10,680
的degree

1133
00:37:10,680 --> 00:37:11,760
 就n平方

1134
00:37:11,760 --> 00:37:15,040
所以這樣大家理解

1135
00:37:16,440 --> 00:37:19,280
這個是計算degree的方式

1136
00:37:19,280 --> 00:37:21,440
如果是用adjacency matrix的話

1137
00:37:21,440 --> 00:37:24,480
 如果是用adjacency list呢

1138
00:37:24,480 --> 00:37:27,200
 其實更快

1139
00:37:27,200 --> 00:37:30,080
因為你其實這有點

1140
00:37:30,080 --> 00:37:31,800
浪費時間

1141
00:37:31,800 --> 00:37:32,200
我的意思說

1142
00:37:32,200 --> 00:37:34,880
adjacency list

1143
00:37:34,880 --> 00:37:36,320
其實因為你只存了1

1144
00:37:36,320 --> 00:37:38,280
所以你怎麼知道它degree

1145
00:37:38,280 --> 00:37:39,960
你就看它裡面有幾項

1146
00:37:39,960 --> 00:37:43,240
所以你這樣子手花的時間

1147
00:37:43,240 --> 00:37:45,440
 其實就是跟它的degree a

1148
00:37:45,520 --> 00:37:45,960
有關

1149
00:37:45,960 --> 00:37:46,920
因為它就兩項

1150
00:37:46,920 --> 00:37:48,280
所以你這樣走過一次

1151
00:37:48,280 --> 00:37:49,560
你就說它就是2

1152
00:37:49,560 --> 00:37:50,760
它就是1

1153
00:37:50,760 --> 00:37:51,920
它就是3

1154
00:37:51,920 --> 00:37:52,720
它就是2

1155
00:37:52,720 --> 00:37:53,840
對吧

1156
00:37:53,840 --> 00:37:56,280
請問我剛才做這件事情

1157
00:37:56,280 --> 00:37:58,040
總共花多少時間

1158
00:37:58,040 --> 00:38:00,320
答案就是

1159
00:38:00,320 --> 00:38:02,360
總共

1160
00:38:02,360 --> 00:38:03,640
總共就是這樣

1161
00:38:03,640 --> 00:38:05,240
就是每一個i

1162
00:38:05,240 --> 00:38:07,960
我看它到底有幾個degree

1163
00:38:07,960 --> 00:38:10,120
其實我就是看adjacency list

1164
00:38:10,120 --> 00:38:11,080
裡面存了幾項

1165
00:38:11,080 --> 00:38:13,240
它的幾項當然就是它degree

1166
00:38:15,240 --> 00:38:16,040
 overall

1167
00:38:16,040 --> 00:38:17,360
我就把所有的i加總

1168
00:38:17,360 --> 00:38:19,000
 這個不就我們前講過了

1169
00:38:19,000 --> 00:38:20,080
就是m的一次方

1170
00:38:20,080 --> 00:38:21,080
好

1171
00:38:21,080 --> 00:38:21,880
ok

1172
00:38:21,880 --> 00:38:24,640
所以如果你用adjacency list

1173
00:38:24,640 --> 00:38:25,920
來儲存你的

1174
00:38:25,920 --> 00:38:27,480
edge的話

1175
00:38:27,480 --> 00:38:28,920
你要去算

1176
00:38:28,920 --> 00:38:31,680
每一個vertex的degree有多少

1177
00:38:31,680 --> 00:38:34,280
總共花的時間是m的一次方

1178
00:38:34,280 --> 00:38:38,440
如果你是用adjacency matrix來做

1179
00:38:38,440 --> 00:38:41,640
你要去看所有每一個vertex

1180
00:38:41,640 --> 00:38:43,600
的degree是多少

1181
00:38:44,360 --> 00:38:45,840
答案是m平方

1182
00:38:45,840 --> 00:38:47,760
請問哪一個比較好

1183
00:38:47,760 --> 00:38:50,360
 就取決於

1184
00:38:50,360 --> 00:38:52,720
你的graph是sparse還是dense

1185
00:38:52,720 --> 00:38:54,520
 我們之前有提過

1186
00:38:54,520 --> 00:38:56,920
我們所遇過的幾乎都是sparse

1187
00:38:56,920 --> 00:38:58,880
 幾乎都sparse

1188
00:38:58,880 --> 00:38:59,960
m就很小 

1189
00:38:59,960 --> 00:39:02,160
請問你要m還是m平方

1190
00:39:02,160 --> 00:39:04,600
 答案當然是m的一次方

1191
00:39:04,600 --> 00:39:06,840
again我再次強調

1192
00:39:06,840 --> 00:39:08,040
這就是為什麼

1193
00:39:08,040 --> 00:39:10,320
我們要用adjacency list

1194
00:39:10,320 --> 00:39:10,800
好

1195
00:39:10,800 --> 00:39:12,800
因為當你在檢查

1196
00:39:12,800 --> 00:39:13,840
它的degree

1197
00:39:14,040 --> 00:39:15,080
它所花的時間

1198
00:39:15,080 --> 00:39:16,080
都還比

1199
00:39:16,080 --> 00:39:18,520
你的adjacency matrix還要少了

1200
00:39:18,520 --> 00:39:19,000
好

1201
00:39:19,000 --> 00:39:20,440
 更不用說我們剛才

1202
00:39:20,440 --> 00:39:21,880
在講的這整個過程

1203
00:39:21,880 --> 00:39:22,720
好就是

1204
00:39:22,720 --> 00:39:24,360
就是剛才講的

1205
00:39:24,360 --> 00:39:25,640
建構的

1206
00:39:25,640 --> 00:39:26,240
嗯

1207
00:39:26,240 --> 00:39:26,920
檢查

1208
00:39:26,920 --> 00:39:27,280
好

1209
00:39:27,280 --> 00:39:27,920
所要花的

1210
00:39:27,920 --> 00:39:28,880
m的一次方

1211
00:39:28,880 --> 00:39:30,400
這個是假設

1212
00:39:30,400 --> 00:39:31,440
你的degree已知

1213
00:39:31,440 --> 00:39:33,320
如果degree未知的話

1214
00:39:33,320 --> 00:39:35,640
你光這邊是要花m平方

1215
00:39:35,640 --> 00:39:37,880
可是你還要花m平方的時間

1216
00:39:37,880 --> 00:39:39,760
 你你這邊要花m的一次方

1217
00:39:39,760 --> 00:39:41,240
可是你要花m平方的時間

1218
00:39:41,240 --> 00:39:42,920
才能夠算出它的degree

1219
00:39:43,280 --> 00:39:45,320
 如果你要adjacency matrix的話

1220
00:39:45,320 --> 00:39:45,880
好

1221
00:39:45,880 --> 00:39:46,680
ok

1222
00:39:46,680 --> 00:39:49,000
反而還更吃虧的感覺

1223
00:39:49,000 --> 00:39:49,400
好

1224
00:39:49,400 --> 00:39:51,920
好總之這個只是一二再再三

1225
00:39:51,920 --> 00:39:53,600
再跟各位強調一次

1226
00:39:53,600 --> 00:39:54,360
 

1227
00:39:54,360 --> 00:39:55,320
你的

1228
00:39:55,320 --> 00:39:57,040
adjacency list

1229
00:39:57,040 --> 00:39:59,320
為什麼老師一直推薦用這個

1230
00:39:59,320 --> 00:40:01,560
而不是用adjacency matrix

1231
00:40:01,560 --> 00:40:03,720
好 是因為效率上

1232
00:40:03,720 --> 00:40:04,360
的確

1233
00:40:04,360 --> 00:40:06,280
adjacency list是比較好的

1234
00:40:06,280 --> 00:40:08,240
好以上

1235
00:40:08,240 --> 00:40:08,880
我們

1236
00:40:08,880 --> 00:40:11,840
結束了OLED circuit這邊的解釋

1237
00:40:11,840 --> 00:40:12,720
謝謝大家

1238
00:40:12,720 --> 00:40:13,360
謝謝

1239
00:40:13,360 --> 00:40:14,040
謝謝大家

1240
00:40:14,040 --> 00:40:14,560
謝謝

1241
00:40:14,560 --> 00:40:14,960
謝謝

1242
00:40:14,960 --> 00:40:15,360
謝謝

1243
00:40:15,360 --> 00:40:15,840
謝謝

